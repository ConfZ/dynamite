__main__:102:INFO (<module>) - Dynamite's logger_level: DEBUG
__main__:103:INFO (<module>) - Dig's logger_level: WARNING
__main__:104:INFO (<module>) - Timeout: 400s
__main__:106:INFO (<module>) - 2020-05-14 09:47:34.657852: dynamo.py --timeout=400 /home/exp/eric/dynamo/benchmarks/nla-term/cohencu7-both-t.c
/home/exp/tools/SageMath/local/lib/python3.7/site-packages/pyximport/pyximport.py:51: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
analysis:72:DEBUG (__init__) - Create C source for mainQ: /var/tmp/Dig_0gxe36gl
analysis:80:DEBUG (__init__) - trans_cmd: /home/exp/eric/dynamo/deps/dynamo-instr/src/cil/bin/cilly --save-temps -D HAPPY_MOOD --dotransform /home/exp/eric/dynamo/benchmarks/nla-term/cohencu7-both-t.c --out=/var/tmp/Dig_0gxe36gl/cohencu7-both-t.c --bnd=500
analysis:87:DEBUG (__init__) - cg: defaultdict(<class 'list'>, {'vloop_28': ['exit'], 'mainQ': ['vloop_28'], 'main': ['mainQ']})
analysis:98:DEBUG (__init__) - postorder_vloop_ids: ['vloop_28']
analysis:107:DEBUG (__init__) - inp_decls (<class 'data.prog.Symbs'>): I a
analysis:108:DEBUG (__init__) - inv_decls (<class 'data.prog.DSymbs'>): {'vtrace1_28': (Symb(name='a', typ='I'), Symb(name='n', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='z', typ='I')), 'vtrace2_28': (Symb(name='a', typ='I'), Symb(name='n', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='z', typ='I')), 'vtrace3_28': (Symb(name='a', typ='I'), Symb(name='n', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='z', typ='I'))}
__main__:152:DEBUG (<module>) - prove_process: 3145
lib:38:DEBUG (gen_rand_inps) - inps (0): Inps()
lib:38:DEBUG (gen_rand_inps) - inps (6): Inps({Inp(ss=('a',), vs=(-12,)), Inp(ss=('a',), vs=(8,)), Inp(ss=('a',), vs=(7,)), Inp(ss=('a',), vs=(-23,)), Inp(ss=('a',), vs=(271,)), Inp(ss=('a',), vs=(-296,))})
lib:38:DEBUG (gen_rand_inps) - inps (62): Inps({Inp(ss=('a',), vs=(283,)), Inp(ss=('a',), vs=(276,)), Inp(ss=('a',), vs=(-3,)), Inp(ss=('a',), vs=(-298,)), Inp(ss=('a',), vs=(27,)), Inp(ss=('a',), vs=(1,)), Inp(ss=('a',), vs=(298,)), Inp(ss=('a',), vs=(-285,)), Inp(ss=('a',), vs=(-29,)), Inp(ss=('a',), vs=(286,)), Inp(ss=('a',), vs=(272,)), Inp(ss=('a',), vs=(4,)), Inp(ss=('a',), vs=(6,)), Inp(ss=('a',), vs=(-273,)), Inp(ss=('a',), vs=(-296,)), Inp(ss=('a',), vs=(26,)), Inp(ss=('a',), vs=(19,)), Inp(ss=('a',), vs=(-20,)), Inp(ss=('a',), vs=(-276,)), Inp(ss=('a',), vs=(-299,)), Inp(ss=('a',), vs=(0,)), Inp(ss=('a',), vs=(-7,)), Inp(ss=('a',), vs=(-30,)), Inp(ss=('a',), vs=(-286,)), Inp(ss=('a',), vs=(-10,)), Inp(ss=('a',), vs=(3,)), Inp(ss=('a',), vs=(-23,)), Inp(ss=('a',), vs=(274,)), Inp(ss=('a',), vs=(-277,)), Inp(ss=('a',), vs=(271,)), Inp(ss=('a',), vs=(15,)), Inp(ss=('a',), vs=(-8,)), Inp(ss=('a',), vs=(12,)), Inp(ss=('a',), vs=(-11,)), Inp(ss=('a',), vs=(-18,)), Inp(ss=('a',), vs=(-297,)), Inp(ss=('a',), vs=(281,)), Inp(ss=('a',), vs=(2,)), Inp(ss=('a',), vs=(-300,)), Inp(ss=('a',), vs=(291,)), Inp(ss=('a',), vs=(-4,)), Inp(ss=('a',), vs=(293,)), Inp(ss=('a',), vs=(7,)), Inp(ss=('a',), vs=(9,)), Inp(ss=('a',), vs=(11,)), Inp(ss=('a',), vs=(280,)), Inp(ss=('a',), vs=(14,)), Inp(ss=('a',), vs=(-9,)), Inp(ss=('a',), vs=(290,)), Inp(ss=('a',), vs=(-5,)), Inp(ss=('a',), vs=(-12,)), Inp(ss=('a',), vs=(-291,)), Inp(ss=('a',), vs=(8,)), Inp(ss=('a',), vs=(10,)), Inp(ss=('a',), vs=(-2,)), Inp(ss=('a',), vs=(-16,)), Inp(ss=('a',), vs=(297,)), Inp(ss=('a',), vs=(-284,)), Inp(ss=('a',), vs=(-282,)), Inp(ss=('a',), vs=(-26,)), Inp(ss=('a',), vs=(-13,)), Inp(ss=('a',), vs=(279,))})
lib:38:DEBUG (gen_rand_inps) - inps (82): Inps({Inp(ss=('a',), vs=(27,)), Inp(ss=('a',), vs=(-29,)), Inp(ss=('a',), vs=(-283,)), Inp(ss=('a',), vs=(272,)), Inp(ss=('a',), vs=(-296,)), Inp(ss=('a',), vs=(-276,)), Inp(ss=('a',), vs=(0,)), Inp(ss=('a',), vs=(3,)), Inp(ss=('a',), vs=(-8,)), Inp(ss=('a',), vs=(288,)), Inp(ss=('a',), vs=(-300,)), Inp(ss=('a',), vs=(-22,)), Inp(ss=('a',), vs=(291,)), Inp(ss=('a',), vs=(24,)), Inp(ss=('a',), vs=(-12,)), Inp(ss=('a',), vs=(-291,)), Inp(ss=('a',), vs=(-287,)), Inp(ss=('a',), vs=(10,)), Inp(ss=('a',), vs=(-284,)), Inp(ss=('a',), vs=(13,)), Inp(ss=('a',), vs=(-26,)), Inp(ss=('a',), vs=(17,)), Inp(ss=('a',), vs=(-3,)), Inp(ss=('a',), vs=(-298,)), Inp(ss=('a',), vs=(298,)), Inp(ss=('a',), vs=(6,)), Inp(ss=('a',), vs=(-17,)), Inp(ss=('a',), vs=(26,)), Inp(ss=('a',), vs=(-30,)), Inp(ss=('a',), vs=(-10,)), Inp(ss=('a',), vs=(-23,)), Inp(ss=('a',), vs=(274,)), Inp(ss=('a',), vs=(-277,)), Inp(ss=('a',), vs=(15,)), Inp(ss=('a',), vs=(-274,)), Inp(ss=('a',), vs=(281,)), Inp(ss=('a',), vs=(2,)), Inp(ss=('a',), vs=(9,)), Inp(ss=('a',), vs=(290,)), Inp(ss=('a',), vs=(-16,)), Inp(ss=('a',), vs=(297,)), Inp(ss=('a',), vs=(-13,)), Inp(ss=('a',), vs=(279,)), Inp(ss=('a',), vs=(283,)), Inp(ss=('a',), vs=(-285,)), Inp(ss=('a',), vs=(286,)), Inp(ss=('a',), vs=(16,)), Inp(ss=('a',), vs=(19,)), Inp(ss=('a',), vs=(-20,)), Inp(ss=('a',), vs=(-299,)), Inp(ss=('a',), vs=(5,)), Inp(ss=('a',), vs=(12,)), Inp(ss=('a',), vs=(-11,)), Inp(ss=('a',), vs=(-4,)), Inp(ss=('a',), vs=(293,)), Inp(ss=('a',), vs=(280,)), Inp(ss=('a',), vs=(-271,)), Inp(ss=('a',), vs=(21,)), Inp(ss=('a',), vs=(8,)), Inp(ss=('a',), vs=(-282,)), Inp(ss=('a',), vs=(276,)), Inp(ss=('a',), vs=(1,)), Inp(ss=('a',), vs=(-14,)), Inp(ss=('a',), vs=(4,)), Inp(ss=('a',), vs=(-273,)), Inp(ss=('a',), vs=(282,)), Inp(ss=('a',), vs=(-7,)), Inp(ss=('a',), vs=(-286,)), Inp(ss=('a',), vs=(292,)), Inp(ss=('a',), vs=(271,)), Inp(ss=('a',), vs=(-18,)), Inp(ss=('a',), vs=(-297,)), Inp(ss=('a',), vs=(-293,)), Inp(ss=('a',), vs=(278,)), Inp(ss=('a',), vs=(7,)), Inp(ss=('a',), vs=(11,)), Inp(ss=('a',), vs=(14,)), Inp(ss=('a',), vs=(-9,)), Inp(ss=('a',), vs=(-5,)), Inp(ss=('a',), vs=(-2,)), Inp(ss=('a',), vs=(-1,)), Inp(ss=('a',), vs=(-272,))})
lib:38:DEBUG (gen_rand_inps) - inps (87): Inps({Inp(ss=('a',), vs=(27,)), Inp(ss=('a',), vs=(-29,)), Inp(ss=('a',), vs=(-283,)), Inp(ss=('a',), vs=(272,)), Inp(ss=('a',), vs=(-296,)), Inp(ss=('a',), vs=(-276,)), Inp(ss=('a',), vs=(0,)), Inp(ss=('a',), vs=(3,)), Inp(ss=('a',), vs=(-8,)), Inp(ss=('a',), vs=(288,)), Inp(ss=('a',), vs=(-300,)), Inp(ss=('a',), vs=(-22,)), Inp(ss=('a',), vs=(291,)), Inp(ss=('a',), vs=(24,)), Inp(ss=('a',), vs=(-12,)), Inp(ss=('a',), vs=(-291,)), Inp(ss=('a',), vs=(-287,)), Inp(ss=('a',), vs=(10,)), Inp(ss=('a',), vs=(-284,)), Inp(ss=('a',), vs=(13,)), Inp(ss=('a',), vs=(-26,)), Inp(ss=('a',), vs=(17,)), Inp(ss=('a',), vs=(-3,)), Inp(ss=('a',), vs=(-298,)), Inp(ss=('a',), vs=(298,)), Inp(ss=('a',), vs=(6,)), Inp(ss=('a',), vs=(-17,)), Inp(ss=('a',), vs=(26,)), Inp(ss=('a',), vs=(-30,)), Inp(ss=('a',), vs=(-10,)), Inp(ss=('a',), vs=(-23,)), Inp(ss=('a',), vs=(274,)), Inp(ss=('a',), vs=(-277,)), Inp(ss=('a',), vs=(15,)), Inp(ss=('a',), vs=(-274,)), Inp(ss=('a',), vs=(281,)), Inp(ss=('a',), vs=(2,)), Inp(ss=('a',), vs=(9,)), Inp(ss=('a',), vs=(270,)), Inp(ss=('a',), vs=(290,)), Inp(ss=('a',), vs=(-16,)), Inp(ss=('a',), vs=(297,)), Inp(ss=('a',), vs=(-13,)), Inp(ss=('a',), vs=(279,)), Inp(ss=('a',), vs=(-288,)), Inp(ss=('a',), vs=(283,)), Inp(ss=('a',), vs=(-285,)), Inp(ss=('a',), vs=(-27,)), Inp(ss=('a',), vs=(286,)), Inp(ss=('a',), vs=(16,)), Inp(ss=('a',), vs=(19,)), Inp(ss=('a',), vs=(-20,)), Inp(ss=('a',), vs=(-299,)), Inp(ss=('a',), vs=(-292,)), Inp(ss=('a',), vs=(5,)), Inp(ss=('a',), vs=(12,)), Inp(ss=('a',), vs=(-11,)), Inp(ss=('a',), vs=(-4,)), Inp(ss=('a',), vs=(293,)), Inp(ss=('a',), vs=(280,)), Inp(ss=('a',), vs=(-271,)), Inp(ss=('a',), vs=(21,)), Inp(ss=('a',), vs=(8,)), Inp(ss=('a',), vs=(28,)), Inp(ss=('a',), vs=(-282,)), Inp(ss=('a',), vs=(276,)), Inp(ss=('a',), vs=(1,)), Inp(ss=('a',), vs=(-14,)), Inp(ss=('a',), vs=(4,)), Inp(ss=('a',), vs=(-273,)), Inp(ss=('a',), vs=(282,)), Inp(ss=('a',), vs=(-7,)), Inp(ss=('a',), vs=(-286,)), Inp(ss=('a',), vs=(292,)), Inp(ss=('a',), vs=(271,)), Inp(ss=('a',), vs=(-18,)), Inp(ss=('a',), vs=(-297,)), Inp(ss=('a',), vs=(-293,)), Inp(ss=('a',), vs=(278,)), Inp(ss=('a',), vs=(7,)), Inp(ss=('a',), vs=(11,)), Inp(ss=('a',), vs=(14,)), Inp(ss=('a',), vs=(-9,)), Inp(ss=('a',), vs=(-5,)), Inp(ss=('a',), vs=(-2,)), Inp(ss=('a',), vs=(-1,)), Inp(ss=('a',), vs=(-272,))})
lib:43:DEBUG (gen_rand_inps) - gen 87/100 random inps
utils.profiling:31:DEBUG (timed) - gen_rand_inps: 42.57ms
lib:54:DEBUG (get_traces_from_inps) - inp_decls: I a
lib:55:DEBUG (get_traces_from_inps) - inv_decls: {'vtrace1_28': (Symb(name='a', typ='I'), Symb(name='n', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='z', typ='I')), 'vtrace2_28': (Symb(name='a', typ='I'), Symb(name='n', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='z', typ='I')), 'vtrace3_28': (Symb(name='a', typ='I'), Symb(name='n', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='z', typ='I'))}
utils.profiling:31:DEBUG (timed) - _get_traces_mp: 146.65ms
utils.profiling:31:DEBUG (timed) - _merge_traces: 142.97ms
utils.profiling:31:DEBUG (timed) - get_traces_from_inps: 290.22ms
analysis:1147:DEBUG (prove) - Analysing vloop_28
analysis:1149:DEBUG (prove) - base_term_inps: 44
analysis:1150:DEBUG (prove) - term_inps: 43
analysis:1151:DEBUG (prove) - mayloop_inps: 0
analysis:1171:DEBUG (prove) - Proving Termination: vloop_28
analysis:1040:DEBUG (prove_term_vloop) - classify_inps: vloop_28
analysis:1043:DEBUG (prove_term_vloop) - itraces: 43
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 4), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 27), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 289), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 17), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 287), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 5), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 20), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 283), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 275), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 292), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 25), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 16), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 293), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 6), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 272), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 3), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 282), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 13), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 11), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 10), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 28), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 12), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 271), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 294), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 279), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 14), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 291), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 281), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 8), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 9), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 18), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 298), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 22), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 15), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 273), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 280), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 29), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 299), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 1), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 2), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 7), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 284), ('vtrace3_28', 1)]
lib:208:DEBUG (print_inps) - [('vtrace1_28', 1), ('vtrace2_28', 277), ('vtrace3_28', 1)]
analysis:1045:DEBUG (prove_term_vloop) - base_term_inps: 0
analysis:1046:DEBUG (prove_term_vloop) - term_inps: 43
analysis:1047:DEBUG (prove_term_vloop) - mayloop_inps: 0
analysis:857:DEBUG (infer_ranking_functions) - vloop: vloop_28
analysis:858:DEBUG (infer_ranking_functions) - term_itraces: 43
analysis:905:DEBUG (infer_ranking_functions) - train_rand_trans: 795
analysis:912:DEBUG (_infer_ranking_functions_from_trans) - rnk_template (<class 'sage.symbolic.expression.Expression'>): a*uk_1 + n*uk_2 + uk_3*x + uk_4*y + uk_5*z + uk_0
analysis:913:DEBUG (_infer_ranking_functions_from_trans) - uks: [uk_0, uk_1, uk_2, uk_3, uk_4, uk_5]
analysis:937:DEBUG (_infer_ranking_functions_from_trans) - train_term_rand_trans: 795
analysis:944:DEBUG (_infer_ranking_functions_from_trans) - model: [uk_1 = 1,
 uk_5 = 0,
 uk_4 = 0,
 uk_3 = 0,
 uk_2 = -1,
 uk_0 = 0]
analysis:948:DEBUG (_infer_ranking_functions_from_trans) - t1: uk_0 +
276*uk_1 +
97*uk_2 +
912673*uk_3 +
28519*uk_4 +
588*uk_5
analysis:949:DEBUG (_infer_ranking_functions_from_trans) - t2: uk_0 +
276*uk_1 +
207*uk_2 +
8869743*uk_3 +
129169*uk_4 +
1248*uk_5
analysis:950:DEBUG (_infer_ranking_functions_from_trans) - rf: a + -1*n
analysis:979:DEBUG (_infer_ranking_functions_from_trans) - train_term_rand_trans: 0
analysis:980:DEBUG (_infer_ranking_functions_from_trans) - ranking_function_list: [a + -1*n]
utils.profiling:31:DEBUG (timed) - infer_ranking_functions: 9475.27ms
analysis:1061:DEBUG (prove_term_vloop) - validate_ranking_functions: vloop_28
analysis:988:DEBUG (validate_ranking_functions) - ranks_str: a + -1*n
validate:120:DEBUG (gen_validate_file) - validate_cmd: /home/exp/eric/dynamo/deps/dynamo-instr/src/cil/bin/cilly --save-temps -D HAPPY_MOOD --dovalidate /home/exp/eric/dynamo/benchmarks/nla-term/cohencu7-both-t.c --out=/var/tmp/Dig_0gxe36gl/vloop_28/par/validate/cohencu7-both-t.c --pos=28 --ranks="a + -1*n"
validate:41:DEBUG (prove_reach) - pcmd: /home/exp/tools/CPAchecker-1.9-unix/scripts/cpa.sh -spec /home/exp/tools/reachability.prp -predicateAnalysis -setprop counterexample.export.compressWitness=false /var/tmp/Dig_0gxe36gl/vloop_28/par/validate/cohencu7-both-t.c
validate:41:DEBUG (prove_reach) - pcmd: /home/exp/tools/ultimate/releaseScripts/default/UAutomizer-linux/Ultimate.py --spec /home/exp/tools/reachability.prp --architecture 32bit --witness-dir /var/tmp/Dig_0gxe36gl/vloop_28/par/uatm --witness-name witness.graphml --file /var/tmp/Dig_0gxe36gl/vloop_28/par/validate/cohencu7-both-t.c
validate:41:DEBUG (prove_reach) - pcmd: /home/exp/tools/ultimate/releaseScripts/default/UTaipan-linux/Ultimate.py --spec /home/exp/tools/reachability.prp --architecture 32bit --witness-dir /var/tmp/Dig_0gxe36gl/vloop_28/par/utp --witness-name witness.graphml --file /var/tmp/Dig_0gxe36gl/vloop_28/par/validate/cohencu7-both-t.c
validate:46:DEBUG (prove_reach) - res: None
validate:46:DEBUG (prove_reach) - res: None
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        validate:46:DEBUG (prove_reach) - res: None
validate:46:DEBUG (prove_reach) - res: None
validate:46:DEBUG (prove_reach) - res: None
validate:250:DEBUG (prove_reach) - wrs: []
utils.profiling:31:DEBUG (timed) - prove_reach: 392638.12ms
analysis:1001:DEBUG (validate_ranking_functions) - r: None
utils.profiling:31:DEBUG (timed) - validate_ranking_functions: 392780.26ms
analysis:1063:DEBUG (prove_term_vloop) - Termination result (vloop_27): None ([a + -1*z, a + -1*n])
utils.profiling:31:DEBUG (timed) - prove_term_vloop: 400895.72ms
analysis:1179:DEBUG (prove) - Proving Non-Termination: vloop_27
analysis:239:DEBUG (_get_stem_from_symstates) - vloop.preloop_loc: vtrace1_27
analysis:184:DEBUG (_get_symstates_from_src) - SymStatesC.maxdepth: 24
analysis:197:DEBUG (_get_symstates_from_src) - target_loc: vtrace1_27
utils.profiling:31:DEBUG (timed) - _get_symstates_from_src: 4202.56ms
analysis:225:DEBUG (_get_stem_from_ss) - preloop_fst_symstate: loc: vtrace1_27
pc: True
slocal: And(a == X_a, 0 == n, 0 == x, 1 == y, 6 == z)
analysis:228:DEBUG (_get_stem_from_ss) - mainQ init_symvars: I X_a
analysis:231:DEBUG (_get_stem_from_ss) - stem_cond (<class 'z3.z3.BoolRef'>): True
analysis:232:DEBUG (_get_stem_from_ss) - stem_transrel (<class 'z3.z3.BoolRef'>): And(a == X_a, 0 == n, 0 == x, 1 == y, 6 == z)
analysis:269:DEBUG (_get_loop_from_symstates) - Create C source for vloop_27: /var/tmp/Dig_xgq72gap
analysis:184:DEBUG (_get_symstates_from_src) - SymStatesC.maxdepth: 24
analysis:197:DEBUG (_get_symstates_from_src) - target_loc: vtrace2_27
utils.profiling:31:DEBUG (timed) - _get_symstates_from_src: 4331.06ms
analysis:280:DEBUG (_get_loop_from_symstates) - vloop inp_decls: I a, I n, I x, I y, I z
analysis:281:DEBUG (_get_loop_from_symstates) - vloop inv_decls: {'vtrace1_27': (Symb(name='a', typ='I'), Symb(name='n', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='z', typ='I')), 'vtrace2_27': (Symb(name='a', typ='I'), Symb(name='n', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='z', typ='I')), 'vtrace3_27': (Symb(name='a', typ='I'), Symb(name='n', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='z', typ='I'))}
analysis:282:DEBUG (_get_loop_from_symstates) - vloop init_symvars: I X_a, I X_n, I X_x, I X_y, I X_z
analysis:314:DEBUG (_get_loop_from_symstates) - inloop_fst_slocal: And(a0 == X_a, n0 == X_n, x0 == X_x, y0 == X_y, z0 == X_z)
analysis:315:DEBUG (_get_loop_from_symstates) - inloop_snd_slocal: And(a1 == X_a,
    n1 == -3*X_n**2 + -2*X_n + X_y,
    x1 == X_x + X_y,
    y1 == X_y + X_z,
    z1 == 6 + X_z)
analysis:327:DEBUG (_get_loop_from_symstates) - loop_transrel: And(And(a0 == a, n0 == n, x0 == x, y0 == y, z0 == z),
    And(a1 == a,
        n1 == -3*n**2 + -2*n + y,
        x1 == x + y,
        y1 == y + z,
        z1 == 6 + z))
analysis:329:DEBUG (_get_loop_from_symstates) - inloop_fst_symstate: pc: 0 <= X_a + -1*X_n
analysis:330:DEBUG (_get_loop_from_symstates) - inloop_fst_symstate: slocal: And(a == X_a, n == X_n, x == X_x, y == X_y, z == X_z)
analysis:334:DEBUG (_get_loop_from_symstates) - loop_cond: 0 <= a + -1*n
analysis:337:DEBUG (_get_loop_from_symstates) - terms: [0, a, -1*n]
analysis:338:DEBUG (_get_loop_from_symstates) - nonlinear_terms: []
utils.profiling:31:DEBUG (timed) - _get_loopinfo_from_symstates: 8579.82ms
analysis:399:DEBUG (get_loopinfo) - stem: <utils.loop.Stem object at 0x7f7c513e4fd0>
analysis:400:DEBUG (get_loopinfo) - loop: <utils.loop.Loop object at 0x7f7c5133fdd8>
utils.profiling:31:DEBUG (timed) - get_loopinfo: 8579.95ms
analysis:702:DEBUG (_stat_candidate_rcs) - stat (1 total): defaultdict(<class 'int'>, {0: 1})
analysis:729:DEBUG (prove_nonterm_vloop) - PROVE_NT DEPTH 0: ZConj({0 <= a + -1*n})
analysis:505:DEBUG (verify) - loop_transrel: And(And(a0 == a, n0 == n, x0 == x, y0 == y, z0 == z),
    And(a1 == a,
        n1 == -3*n**2 + -2*n + y,
        x1 == x + y,
        y1 == y + z,
        z1 == 6 + z))
analysis:506:DEBUG (verify) - loop_cond: 0 <= a + -1*n
analysis:507:DEBUG (verify) - rcs: ZConj({0 <= a + -1*n})
analysis:521:DEBUG (verify) - labeled_rcs: ZConj({0 <= a + -1*n:c_0})
analysis:528:DEBUG (verify) - transrel_rcs: ZConj({0 <= a0 + -1*n0:c_0, And(And(a0 == a, n0 == n, x0 == x, y0 == y, z0 == z),
    And(a1 == a,
        n1 == -3*n**2 + -2*n + y,
        x1 == x + y,
        y1 == y + z,
        z1 == 6 + z))})
analysis:533:DEBUG (verify) - init_transrel_rcs: ZConj({True, And(And(a0 == a, n0 == n, x0 == x, y0 == y, z0 == z),
    And(a1 == a,
        n1 == -3*n**2 + -2*n + y,
        x1 == x + y,
        y1 == y + z,
        z1 == 6 + z)), And(a == X_a, 0 == n, 0 == x, 1 == y, 6 == z), 0 <= a0 + -1*n0:c_0})
analysis:542:DEBUG (_check) - rc: 0 <= a + -1*n:c_0
analysis:547:DEBUG (_check) - rc_r: 0 <= a1 + -1*n1
analysis:548:DEBUG (_check) - f: ZConj({And(And(a0 == a, n0 == n, x0 == x, y0 == y, z0 == z),
    And(a1 == a,
        n1 == -3*n**2 + -2*n + y,
        x1 == x + y,
        y1 == y + z,
        z1 == 6 + z)), Not(0 <= a1 + -1*n1), 0 <= a0 + -1*n0:c_0})
analysis:563:DEBUG (_check) - rs: sat
analysis:570:DEBUG (_check) - init_f: ZConj({And(And(a0 == a, n0 == n, x0 == x, y0 == y, z0 == z),
    And(a1 == a,
        n1 == -3*n**2 + -2*n + y,
        x1 == x + y,
        y1 == y + z,
        z1 == 6 + z)), And(a == X_a, 0 == n, 0 == x, 1 == y, 6 == z), Not(0 <= a1 + -1*n1), 0 <= a0 + -1*n0:c_0, True})
analysis:571:DEBUG (_check) - init_rs: [[('X_a', 0), ('a1', 0), ('a', 0), ('a0', 0), ('z', 6), ('y', 1), ('x', 0), ('n', 0), ('z1', 12), ('y1', 7), ('x1', 1), ('n1', 1), ('z0', 6), ('y0', 1), ('x0', 0), ('n0', 0)]]
analysis:586:DEBUG (_check) - init_models: sat (1 models)
analysis:591:DEBUG (_check) - inps: Inps({Inp(ss=('a',), vs=(0,))})
analysis:600:INFO (verify) - dg: defaultdict(<class 'list'>, {})
analysis:601:INFO (verify) - label_d: defaultdict(<class 'str'>, {0 <= a + -1*n: 'c_0'})
analysis:602:INFO (verify) - rev_label_d: {'c_0': 0 <= a + -1*n}
analysis:605:INFO (verify) - loop_cond_label: c_0
analysis:609:INFO (verify) - mds_labels: set()
analysis:610:INFO (verify) - mds: ZConj()
lib:54:DEBUG (get_traces_from_inps) - inp_decls: I a
lib:55:DEBUG (get_traces_from_inps) - inv_decls: {'vtrace1_27': (Symb(name='a', typ='I'), Symb(name='n', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='z', typ='I')), 'vtrace2_27': (Symb(name='a', typ='I'), Symb(name='n', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='z', typ='I')), 'vtrace3_27': (Symb(name='a', typ='I'), Symb(name='n', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='z', typ='I'))}
utils.profiling:31:DEBUG (timed) - _get_traces_mp: 0.05ms
utils.profiling:31:DEBUG (timed) - _merge_traces: 0.75ms
utils.profiling:31:DEBUG (timed) - get_traces_from_inps: 1.01ms
utils.profiling:31:DEBUG (timed) - verify: 216.00ms
analysis:630:DEBUG (strengthen) - base_term_inps: 0
analysis:631:DEBUG (strengthen) - term_inps: [Inp(ss=('a',), vs=(0,))]
analysis:632:DEBUG (strengthen) - mayloop_inps: 0
analysis:633:DEBUG (strengthen) - rcs: ZConj({0 <= a + -1*n})
lib:230:DEBUG (get_traces_by_id) - dtraces[vtrace2_27]: 0
lib:230:DEBUG (get_traces_by_id) - dtraces[vtrace2_27]: 0
lib:254:DEBUG (infer_from_traces) - invs: 
analysis:637:DEBUG (strengthen) - mayloop_invs: ZConj()
lib:230:DEBUG (get_traces_by_id) - dtraces[vtrace2_27]: 0
lib:230:DEBUG (get_traces_by_id) - dtraces[vtrace2_27]: 1
*** 'None', 0 locs, 0 invs (), 0 traces, 0 inps, time 0.01s, rand seed 1589467254.62, test 72 36:

lib:254:DEBUG (infer_from_traces) - invs: 
analysis:641:DEBUG (strengthen) - term_invs: ZConj()
utils.profiling:31:DEBUG (timed) - strengthen: 19.44ms
analysis:758:DEBUG (prove_nonterm_vloop) - tCex: ZConj()
utils.profiling:31:DEBUG (timed) - prove_nonterm_vloop: 8833.27ms
utils.profiling:31:DEBUG (timed) - prove: 410008.32ms
*** 'None', 0 locs, 0 invs (), 1 traces, 0 inps, time 0.01s, rand seed 1589467254.62, test 72 36:

TNT result: None
Time log:
gen_rand_inps: 0.046s
_get_traces_mp: 0.128s
_merge_traces: 0.101s
get_traces_from_inps: 0.230s
infer_ranking_functions: 8.112s
prove_reach: 392.638s
validate_ranking_functions: 392.780s
prove_term_vloop: 400.896s
_get_symstates_from_src: 8.534s
_get_loopinfo_from_symstates: 8.580s
get_loopinfo: 8.580s
verify: 0.216s
strengthen: 0.019s
prove_nonterm_vloop: 8.833s

EJK TIMER: 400.000314

