#!/usr/bin/perl

use strict;
use warnings;
use Data::Dumper;
use lib '.';
my @tools = qw/ultimate dynamo/; #ultimate aprove seahorn/;
use Parsers qw{parse find_benchmarks};
my $usage = "usage: ./harvest (csvs|nocsvs) <benchdir> <tmpdir>\n";
die $usage unless $#ARGV >= 2;
my ($csvs,$bdir,$outdir) = @ARGV;

my @bnames = ();
#@bnames = @ARGV if $#ARGV > -1;
    
my ($benchdir,@benches) = Parsers::find_benchmarks($bdir,\@bnames);

################### Filename for results
use POSIX qw(strftime);
my $now = time();
my $fn = strftime('%Y%m%d%H%M%S', gmtime($now));

# dynamo-mannadiv-both-t.c.log     ultimate-cohencu4-both-t.c.log

# /home/ejk/dynamo/benchmarks/svcomp-nla-digbench/out-C4SElYT/ultimate-bresenham-both-t.c-both-t.c.log

my @dynDetail;
my @skips;
################### Harvesting the results
print "% Tool   Benchmark                     Time    Result\n";
print "% ============================================\n";
my %b2res;
my @newfile;
foreach my $tool (@tools) {
  foreach my $b (sort @benches) {
      mkdir("../results/$b") if (not (-e "../results/$b"));
      my $logfn = "$benchdir/$outdir/$tool-$b.log";
      if (not (-e $logfn)) { push @skips, $logfn; next; }
      $b2res{$b} = Parsers::parse($tool,$logfn);
      my $tmpb = $b; $tmpb =~ s/-both-t.c//;
      printf "\\%-10s & %-80s & %8.2f & %-10s\n", $tool, $tmpb, $b2res{$b}->{time}, $b2res{$b}->{result};

      push @dynDetail, Parsers::dynDetail($tmpb,$logfn,
                                          ($b2res{$b}->{time} > 900 ? 1 : 0),
                                          $b2res{$b}->{time}, $b2res{$b}->{result})
          if ($tool eq 'dynamo');

      if ($csvs eq 'csvs') {
          my $ln = sprintf("%s,%s,%.2f\n", $b, $b2res{$b}->{result},  $b2res{$b}->{time});
          open CHANH, ">../results/$b/$tool.$fn.csv" or die $!;
          print CHANH $ln;
          close CHANH;
      }
      push @newfile, "../results/$b/$tool.$fn.csv";
  }
}
print "Skipped These:\n   ".join("\n   ",@skips)."\n";
print "\n";
print for @dynDetail;
print "You may now wish to:\n  git add ".(join(" ",@newfile))."\n  git commit -m \"results $fn\"\n";
