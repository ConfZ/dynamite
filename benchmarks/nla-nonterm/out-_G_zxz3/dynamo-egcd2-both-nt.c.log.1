__main__:102:INFO (<module>) - Dynamite's logger_level: DEBUG
__main__:103:INFO (<module>) - Dig's logger_level: WARNING
__main__:104:INFO (<module>) - Timeout: 900s
__main__:106:INFO (<module>) - 2020-05-15 08:05:42.269303: dynamo.py --timeout=900 /home/exp/eric/dynamo/benchmarks/nla-nonterm/egcd2-both-nt.c
/home/exp/tools/SageMath/local/lib/python3.7/site-packages/pyximport/pyximport.py:51: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
analysis:72:DEBUG (__init__) - Create C source for mainQ: /var/tmp/Dig_33azro2o
analysis:80:DEBUG (__init__) - trans_cmd: /home/exp/eric/dynamo/deps/dynamo-instr/src/cil/bin/cilly --save-temps -D HAPPY_MOOD --dotransform /home/exp/eric/dynamo/benchmarks/nla-nonterm/egcd2-both-nt.c --out=/var/tmp/Dig_33azro2o/egcd2-both-nt.c --bnd=500
analysis:87:DEBUG (__init__) - cg: defaultdict(<class 'list'>, {'vloop_33': ['exit'], 'vloop_27': ['exit', 'vloop_33'], 'mainQ': ['vloop_27'], 'main': ['mainQ']})
analysis:98:DEBUG (__init__) - postorder_vloop_ids: ['vloop_33', 'vloop_27']
analysis:107:DEBUG (__init__) - inp_decls (<class 'data.prog.Symbs'>): I x, I y
analysis:108:DEBUG (__init__) - inv_decls (<class 'data.prog.DSymbs'>): {'vtrace1_27': (Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='a', typ='I'), Symb(name='b', typ='I'), Symb(name='p', typ='I'), Symb(name='q', typ='I'), Symb(name='r', typ='I'), Symb(name='s', typ='I'), Symb(name='c', typ='I'), Symb(name='k', typ='I'), Symb(name='temp', typ='I')), 'vtrace2_27': (Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='a', typ='I'), Symb(name='b', typ='I'), Symb(name='p', typ='I'), Symb(name='q', typ='I'), Symb(name='r', typ='I'), Symb(name='s', typ='I'), Symb(name='c', typ='I'), Symb(name='k', typ='I'), Symb(name='temp', typ='I')), 'vtrace3_27': (Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='a', typ='I'), Symb(name='b', typ='I'), Symb(name='p', typ='I'), Symb(name='q', typ='I'), Symb(name='r', typ='I'), Symb(name='s', typ='I'), Symb(name='c', typ='I'), Symb(name='k', typ='I'), Symb(name='temp', typ='I')), 'vtrace1_33': (Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='a', typ='I'), Symb(name='b', typ='I'), Symb(name='p', typ='I'), Symb(name='r', typ='I'), Symb(name='c', typ='I'), Symb(name='k', typ='I')), 'vtrace2_33': (Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='a', typ='I'), Symb(name='b', typ='I'), Symb(name='p', typ='I'), Symb(name='r', typ='I'), Symb(name='c', typ='I'), Symb(name='k', typ='I')), 'vtrace3_33': (Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='a', typ='I'), Symb(name='b', typ='I'), Symb(name='p', typ='I'), Symb(name='r', typ='I'), Symb(name='c', typ='I'), Symb(name='k', typ='I'))}
__main__:152:DEBUG (<module>) - prove_process: 8996
lib:43:DEBUG (gen_rand_inps) - gen 102/100 random inps
utils.profiling:31:DEBUG (timed) - gen_rand_inps: 1207.49ms
lib:54:DEBUG (get_traces_from_inps) - inp_decls: I x, I y
lib:55:DEBUG (get_traces_from_inps) - inv_decls: {'vtrace1_27': (Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='a', typ='I'), Symb(name='b', typ='I'), Symb(name='p', typ='I'), Symb(name='q', typ='I'), Symb(name='r', typ='I'), Symb(name='s', typ='I'), Symb(name='c', typ='I'), Symb(name='k', typ='I'), Symb(name='temp', typ='I')), 'vtrace2_27': (Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='a', typ='I'), Symb(name='b', typ='I'), Symb(name='p', typ='I'), Symb(name='q', typ='I'), Symb(name='r', typ='I'), Symb(name='s', typ='I'), Symb(name='c', typ='I'), Symb(name='k', typ='I'), Symb(name='temp', typ='I')), 'vtrace3_27': (Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='a', typ='I'), Symb(name='b', typ='I'), Symb(name='p', typ='I'), Symb(name='q', typ='I'), Symb(name='r', typ='I'), Symb(name='s', typ='I'), Symb(name='c', typ='I'), Symb(name='k', typ='I'), Symb(name='temp', typ='I')), 'vtrace1_33': (Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='a', typ='I'), Symb(name='b', typ='I'), Symb(name='p', typ='I'), Symb(name='r', typ='I'), Symb(name='c', typ='I'), Symb(name='k', typ='I')), 'vtrace2_33': (Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='a', typ='I'), Symb(name='b', typ='I'), Symb(name='p', typ='I'), Symb(name='r', typ='I'), Symb(name='c', typ='I'), Symb(name='k', typ='I')), 'vtrace3_33': (Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='a', typ='I'), Symb(name='b', typ='I'), Symb(name='p', typ='I'), Symb(name='r', typ='I'), Symb(name='c', typ='I'), Symb(name='k', typ='I'))}
utils.profiling:31:DEBUG (timed) - _get_traces_mp: 1713.11ms
utils.profiling:31:DEBUG (timed) - _merge_traces: 2317.17ms
utils.profiling:31:DEBUG (timed) - get_traces_from_inps: 4031.09ms
analysis:1153:DEBUG (prove) - Analysing vloop_33
analysis:1155:DEBUG (prove) - base_term_inps: 0
analysis:1156:DEBUG (prove) - term_inps: 0
analysis:1157:DEBUG (prove) - mayloop_inps: 94
analysis:1160:DEBUG (prove) - Proving Non-Termination: vloop_33
analysis:239:DEBUG (_get_stem_from_symstates) - vloop.preloop_loc: vtrace1_33
analysis:184:DEBUG (_get_symstates_from_src) - SymStatesC.maxdepth: 24
data.symstates:63:ERROR (parse) - Cannot obtain symstates from '/var/tmp/Dig_33azro2o/symexe/egcd2-both-nt_mainQ.c.mainQ_24.straces'
data.symstates:63:ERROR (parse) - Cannot obtain symstates from '/var/tmp/Dig_33azro2o/symexe/egcd2-both-nt_mainQ.c.mainQ_20.straces'
data.symstates:63:ERROR (parse) - Cannot obtain symstates from '/var/tmp/Dig_33azro2o/symexe/egcd2-both-nt_mainQ.c.mainQ_21.straces'
data.symstates:63:ERROR (parse) - Cannot obtain symstates from '/var/tmp/Dig_33azro2o/symexe/egcd2-both-nt_mainQ.c.mainQ_23.straces'
data.symstates:63:ERROR (parse) - Cannot obtain symstates from '/var/tmp/Dig_33azro2o/symexe/egcd2-both-nt_mainQ.c.mainQ_22.straces'
data.symstates:317:WARNING (compute) - cannot obtain symbolic states, unreachable locs?
analysis:194:DEBUG (_get_symstates_from_src) - Traceback (most recent call last):
  File "/home/exp/eric/dynamo/src/analysis.py", line 192, in _get_symstates_from_src
    symstates.compute(src.symexefile, src.mainQ_name, src.funname, src.symexedir)
  File "/home/exp/eric/dynamo/deps/dig/src/data/symstates.py", line 319, in compute
    sys.exit(0)
SystemExit: 0

analysis:197:DEBUG (_get_symstates_from_src) - target_loc: vtrace1_33
analysis:184:DEBUG (_get_symstates_from_src) - SymStatesC.maxdepth: 24
data.symstates:63:ERROR (parse) - Cannot obtain symstates from '/var/tmp/Dig_33azro2o/symexe/egcd2-both-nt_mainQ.c.mainQ_26.straces'
data.symstates:63:ERROR (parse) - Cannot obtain symstates from '/var/tmp/Dig_33azro2o/symexe/egcd2-both-nt_mainQ.c.mainQ_25.straces'
analysis:197:DEBUG (_get_symstates_from_src) - target_loc: vtrace1_33
analysis:184:DEBUG (_get_symstates_from_src) - SymStatesC.maxdepth: 29
analysis:197:DEBUG (_get_symstates_from_src) - target_loc: vtrace1_33
analysis:184:DEBUG (_get_symstates_from_src) - SymStatesC.maxdepth: 34
analysis:197:DEBUG (_get_symstates_from_src) - target_loc: vtrace1_33
analysis:184:DEBUG (_get_symstates_from_src) - SymStatesC.maxdepth: 39
analysis:197:DEBUG (_get_symstates_from_src) - target_loc: vtrace1_33
utils.profiling:31:DEBUG (timed) - _get_symstates_from_src: 11780.02ms
utils.profiling:31:DEBUG (timed) - _get_symstates_from_src: 27355.59ms
utils.profiling:31:DEBUG (timed) - _get_symstates_from_src: 37644.05ms
utils.profiling:31:DEBUG (timed) - _get_symstates_from_src: 53682.97ms
utils.profiling:31:DEBUG (timed) - _get_symstates_from_src: 65724.52ms
analysis:225:DEBUG (_get_stem_from_ss) - preloop_fst_symstate: loc: vtrace1_33
pc: And(1 <= X_x, 1 <= X_y)
slocal: And(x == X_x,
    y == X_y,
    a == X_x,
    b == X_y,
    1 == p,
    0 == r,
    c == X_x,
    0 == k)
analysis:228:DEBUG (_get_stem_from_ss) - mainQ init_symvars: I X_x, I X_y
analysis:231:DEBUG (_get_stem_from_ss) - stem_cond (<class 'z3.z3.BoolRef'>): And(1 <= X_x, 1 <= X_y)
analysis:232:DEBUG (_get_stem_from_ss) - stem_transrel (<class 'z3.z3.BoolRef'>): And(x == X_x,
    y == X_y,
    a == X_x,
    b == X_y,
    1 == p,
    0 == r,
    c == X_x,
    0 == k)
analysis:269:DEBUG (_get_loop_from_symstates) - Create C source for vloop_33: /var/tmp/Dig_rh5nib5w
analysis:184:DEBUG (_get_symstates_from_src) - SymStatesC.maxdepth: 44
analysis:197:DEBUG (_get_symstates_from_src) - target_loc: vtrace2_33
utils.profiling:31:DEBUG (timed) - _get_symstates_from_src: 16103.38ms
analysis:280:DEBUG (_get_loop_from_symstates) - vloop inp_decls: I x, I y, I a, I b, I p, I r, I c, I k
analysis:281:DEBUG (_get_loop_from_symstates) - vloop inv_decls: {'vtrace1_27': (Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='a', typ='I'), Symb(name='b', typ='I'), Symb(name='p', typ='I'), Symb(name='q', typ='I'), Symb(name='r', typ='I'), Symb(name='s', typ='I'), Symb(name='c', typ='I'), Symb(name='k', typ='I'), Symb(name='temp', typ='I')), 'vtrace2_27': (Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='a', typ='I'), Symb(name='b', typ='I'), Symb(name='p', typ='I'), Symb(name='q', typ='I'), Symb(name='r', typ='I'), Symb(name='s', typ='I'), Symb(name='c', typ='I'), Symb(name='k', typ='I'), Symb(name='temp', typ='I')), 'vtrace3_27': (Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='a', typ='I'), Symb(name='b', typ='I'), Symb(name='p', typ='I'), Symb(name='q', typ='I'), Symb(name='r', typ='I'), Symb(name='s', typ='I'), Symb(name='c', typ='I'), Symb(name='k', typ='I'), Symb(name='temp', typ='I')), 'vtrace1_33': (Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='a', typ='I'), Symb(name='b', typ='I'), Symb(name='p', typ='I'), Symb(name='r', typ='I'), Symb(name='c', typ='I'), Symb(name='k', typ='I')), 'vtrace2_33': (Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='a', typ='I'), Symb(name='b', typ='I'), Symb(name='p', typ='I'), Symb(name='r', typ='I'), Symb(name='c', typ='I'), Symb(name='k', typ='I')), 'vtrace3_33': (Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='a', typ='I'), Symb(name='b', typ='I'), Symb(name='p', typ='I'), Symb(name='r', typ='I'), Symb(name='c', typ='I'), Symb(name='k', typ='I'))}
analysis:282:DEBUG (_get_loop_from_symstates) - vloop init_symvars: I X_x, I X_y, I X_a, I X_b, I X_p, I X_r, I X_c, I X_k
analysis:314:DEBUG (_get_loop_from_symstates) - inloop_fst_slocal: And(x0 == X_x,
    y0 == X_y,
    a0 == X_a,
    b0 == X_b,
    p0 == X_p,
    r0 == X_r,
    c0 == X_c,
    k0 == X_k)
analysis:315:DEBUG (_get_loop_from_symstates) - inloop_snd_slocal: And(x1 == X_x,
    y1 == X_y,
    a1 == X_a,
    b1 == X_b,
    p1 == X_p,
    r1 == X_r,
    c1 == -1*X_b + X_c,
    k1 == 1 + X_k)
analysis:327:DEBUG (_get_loop_from_symstates) - loop_transrel: And(And(x0 == x,
        y0 == y,
        a0 == a,
        b0 == b,
        p0 == p,
        r0 == r,
        c0 == c,
        k0 == k),
    And(x1 == x,
        y1 == y,
        a1 == a,
        b1 == b,
        p1 == p,
        r1 == r,
        c1 == -1*b + c,
        k1 == 1 + k))
analysis:329:DEBUG (_get_loop_from_symstates) - inloop_fst_symstate: pc: 0 == X_p*X_x + X_r*X_y + -1*X_a
analysis:330:DEBUG (_get_loop_from_symstates) - inloop_fst_symstate: slocal: And(x == X_x,
    y == X_y,
    a == X_a,
    b == X_b,
    p == X_p,
    r == X_r,
    c == X_c,
    k == X_k)
analysis:334:DEBUG (_get_loop_from_symstates) - loop_cond: 0 == p*x + r*y + -1*a
analysis:337:DEBUG (_get_loop_from_symstates) - terms: [0, p*x, r*y, -1*a]
analysis:338:DEBUG (_get_loop_from_symstates) - nonlinear_terms: [p*x, r*y]
utils.profiling:31:DEBUG (timed) - _get_loopinfo_from_symstates: 82124.19ms
analysis:399:DEBUG (get_loopinfo) - stem: <utils.loop.Stem object at 0x7f2fc31c3c18>
analysis:400:DEBUG (get_loopinfo) - loop: <utils.loop.Loop object at 0x7f2fc19e79b0>
utils.profiling:31:DEBUG (timed) - get_loopinfo: 82124.52ms
analysis:704:DEBUG (_stat_candidate_rcs) - stat (1 total): defaultdict(<class 'int'>, {0: 1})
analysis:732:DEBUG (prove_nonterm_vloop) - PROVE_NT DEPTH 0: ZConj({0 == p*x + r*y + -1*a})
analysis:505:DEBUG (verify) - loop_transrel: And(And(x0 == x,
        y0 == y,
        a0 == a,
        b0 == b,
        p0 == p,
        r0 == r,
        c0 == c,
        k0 == k),
    And(x1 == x,
        y1 == y,
        a1 == a,
        b1 == b,
        p1 == p,
        r1 == r,
        c1 == -1*b + c,
        k1 == 1 + k))
analysis:506:DEBUG (verify) - loop_cond: 0 == p*x + r*y + -1*a
analysis:507:DEBUG (verify) - rcs: ZConj({0 == p*x + r*y + -1*a})
analysis:521:DEBUG (verify) - labeled_rcs: ZConj({0 == p*x + r*y + -1*a:c_0})
analysis:528:DEBUG (verify) - transrel_rcs: ZConj({And(And(x0 == x,
        y0 == y,
        a0 == a,
        b0 == b,
        p0 == p,
        r0 == r,
        c0 == c,
        k0 == k),
    And(x1 == x,
        y1 == y,
        a1 == a,
        b1 == b,
        p1 == p,
        r1 == r,
        c1 == -1*b + c,
        k1 == 1 + k)), 0 == p0*x0 + r0*y0 + -1*a0:c_0})
analysis:533:DEBUG (verify) - init_transrel_rcs: ZConj({And(1 <= X_x, 1 <= X_y), And(x == X_x,
    y == X_y,
    a == X_x,
    b == X_y,
    1 == p,
    0 == r,
    c == X_x,
    0 == k), 0 == p0*x0 + r0*y0 + -1*a0:c_0, And(And(x0 == x,
        y0 == y,
        a0 == a,
        b0 == b,
        p0 == p,
        r0 == r,
        c0 == c,
        k0 == k),
    And(x1 == x,
        y1 == y,
        a1 == a,
        b1 == b,
        p1 == p,
        r1 == r,
        c1 == -1*b + c,
        k1 == 1 + k))})
analysis:542:DEBUG (_check) - rc: 0 == p*x + r*y + -1*a:c_0
analysis:547:DEBUG (_check) - rc_r: 0 == p1*x1 + r1*y1 + -1*a1
analysis:548:DEBUG (_check) - f: ZConj({Not(0 == p1*x1 + r1*y1 + -1*a1), 0 == p0*x0 + r0*y0 + -1*a0:c_0, And(And(x0 == x,
        y0 == y,
        a0 == a,
        b0 == b,
        p0 == p,
        r0 == r,
        c0 == c,
        k0 == k),
    And(x1 == x,
        y1 == y,
        a1 == a,
        b1 == b,
        p1 == p,
        r1 == r,
        c1 == -1*b + c,
        k1 == 1 + k))})
solver:212:DEBUG (_get_unsat_core) - approx: [('c_0', 0 == p0*x0 + r0*y0 + -1*a0)]
analysis:556:DEBUG (_check) - rs: unsat
analysis:557:DEBUG (_check) - unsat_core: ['c_0']
analysis:600:INFO (verify) - dg: defaultdict(<class 'list'>, {'c_0': ['c_0']})
analysis:601:INFO (verify) - label_d: defaultdict(<class 'str'>, {0 == p*x + r*y + -1*a: 'c_0'})
analysis:602:INFO (verify) - rev_label_d: {'c_0': 0 == p*x + r*y + -1*a}
analysis:605:INFO (verify) - loop_cond_label: c_0
analysis:609:INFO (verify) - mds_labels: {'c_0'}
analysis:610:INFO (verify) - mds: ZConj({0 == p*x + r*y + -1*a})
utils.profiling:31:DEBUG (timed) - verify: 684.48ms
analysis:747:DEBUG (prove_nonterm_vloop) - new valid rcs: ZConj({0 == p*x + r*y + -1*a})
utils.profiling:31:DEBUG (timed) - prove_nonterm_vloop: 83046.02ms
analysis:770:INFO (print_valid_rcs) - rcs: ZConj({0 == p*x + r*y + -1*a})
analysis:771:INFO (print_valid_rcs) - (simplified) rcs: 0 == p*x + r*y + -1*a
utils.profiling:31:DEBUG (timed) - prove: 88507.26ms
TNT result: (False, ('vloop_33', [(ZConj({0 == p*x + r*y + -1*a}), [])]))
Time log:
gen_rand_inps: 1.207s
_get_traces_mp: 1.713s
_merge_traces: 2.317s
get_traces_from_inps: 4.031s
_get_symstates_from_src: 212.291s
_get_loopinfo_from_symstates: 82.124s
get_loopinfo: 82.125s
verify: 0.684s
prove_nonterm_vloop: 83.046s
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              data.symstates:63:ERROR (parse) - Cannot obtain symstates from '/var/tmp/Dig_079ruza8/symexe/dijkstra5-both-nt_vloop_33.c.vloop_33_311.straces'
data.symstates:63:ERROR (parse) - Cannot obtain symstates from '/var/tmp/Dig_079ruza8/symexe/dijkstra5-both-nt_vloop_33.c.vloop_33_312.straces'
data.symstates:63:ERROR (parse) - Cannot obtain symstates from '/var/tmp/Dig_079ruza8/symexe/dijkstra5-both-nt_vloop_33.c.vloop_33_313.straces'
data.symstates:63:ERROR (parse) - Cannot obtain symstates from '/var/tmp/Dig_079ruza8/symexe/dijkstra5-both-nt_vloop_33.c.vloop_33_314.straces'
data.symstates:63:ERROR (parse) - Cannot obtain symstates from '/var/tmp/Dig_079ruza8/symexe/dijkstra5-both-nt_vloop_33.c.vloop_33_310.straces'
data.symstates:317:WARNING (compute) - cannot obtain symbolic states, unreachable locs?
analysis:194:DEBUG (_get_symstates_from_src) - Traceback (most recent call last):
  File "/home/exp/eric/dynamo/src/analysis.py", line 192, in _get_symstates_from_src
    symstates.compute(src.symexefile, src.mainQ_name, src.funname, src.symexedir)
  File "/home/exp/eric/dynamo/deps/dig/src/data/symstates.py", line 319, in compute
    sys.exit(0)
SystemExit: 0

analysis:197:DEBUG (_get_symstates_from_src) - target_loc: vtrace2_33
analysis:184:DEBUG (_get_symstates_from_src) - SymStatesC.maxdepth: 314
analysis:197:DEBUG (_get_symstates_from_src) - target_loc: vtrace2_33
analysis:184:DEBUG (_get_symstates_from_src) - SymStatesC.maxdepth: 319
analysis:197:DEBUG (_get_symstates_from_src) - target_loc: vtrace2_33
analysis:184:DEBUG (_get_symstates_from_src) - SymStatesC.maxdepth: 324
analysis:197:DEBUG (_get_symstates_from_src) - target_loc: vtrace2_33
analysis:184:DEBUG (_get_symstates_from_src) - SymStatesC.maxdepth: 329
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           data.symstates:63:ERROR (parse) - Cannot obtain symstates from '/var/tmp/Dig_ychfu_ru/symexe/dijkstra4-both-nt_vloop_33.c.vloop_33_588.straces'
data.symstates:63:ERROR (parse) - Cannot obtain symstates from '/var/tmp/Dig_ychfu_ru/symexe/dijkstra4-both-nt_vloop_33.c.vloop_33_585.straces'
data.symstates:63:ERROR (parse) - Cannot obtain symstates from '/var/tmp/Dig_ychfu_ru/symexe/dijkstra4-both-nt_vloop_33.c.vloop_33_586.straces'
data.symstates:63:ERROR (parse) - Cannot obtain symstates from '/var/tmp/Dig_ychfu_ru/symexe/dijkstra4-both-nt_vloop_33.c.vloop_33_589.straces'
data.symstates:63:ERROR (parse) - Cannot obtain symstates from '/var/tmp/Dig_ychfu_ru/symexe/dijkstra4-both-nt_vloop_33.c.vloop_33_587.straces'
data.symstates:317:WARNING (compute) - cannot obtain symbolic states, unreachable locs?
analysis:194:DEBUG (_get_symstates_from_src) - Traceback (most recent call last):
  File "/home/exp/eric/dynamo/src/analysis.py", line 192, in _get_symstates_from_src
    symstates.compute(src.symexefile, src.mainQ_name, src.funname, src.symexedir)
  File "/home/exp/eric/dynamo/deps/dig/src/data/symstates.py", line 319, in compute
    sys.exit(0)
SystemExit: 0

analysis:197:DEBUG (_get_symstates_from_src) - target_loc: vtrace2_33
analysis:184:DEBUG (_get_symstates_from_src) - SymStatesC.maxdepth: 589
analysis:197:DEBUG (_get_symstates_from_src) - target_loc: vtrace2_33
analysis:184:DEBUG (_get_symstates_from_src) - SymStatesC.maxdepth: 594
analysis:197:DEBUG (_get_symstates_from_src) - target_loc: vtrace2_33
analysis:184:DEBUG (_get_symstates_from_src) - SymStatesC.maxdepth: 599
analysis:197:DEBUG (_get_symstates_from_src) - target_loc: vtrace2_33
analysis:184:DEBUG (_get_symstates_from_src) - SymStatesC.maxdepth: 604
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           data.symstates:63:ERROR (parse) - Cannot obtain symstates from '/var/tmp/Dig_6j853e4d/symexe/dijkstra3-both-nt_vloop_33.c.vloop_33_900.straces'
analysis:197:DEBUG (_get_symstates_from_src) - target_loc: vtrace2_33
analysis:184:DEBUG (_get_symstates_from_src) - SymStatesC.maxdepth: 904
analysis:197:DEBUG (_get_symstates_from_src) - target_loc: vtrace2_33
analysis:184:DEBUG (_get_symstates_from_src) - SymStatesC.maxdepth: 909
analysis:197:DEBUG (_get_symstates_from_src) - target_loc: vtrace2_33
analysis:184:DEBUG (_get_symstates_from_src) - SymStatesC.maxdepth: 914
analysis:197:DEBUG (_get_symstates_from_src) - target_loc: vtrace2_33
analysis:184:DEBUG (_get_symstates_from_src) - SymStatesC.maxdepth: 919

EJK TIMER: 94.795979

