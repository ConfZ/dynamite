__main__:113:INFO (<module>) - Dynamite's logger_level: DEBUG
__main__:114:INFO (<module>) - Dig's logger_level: WARNING
__main__:115:INFO (<module>) - Timeout: 300s
__main__:117:INFO (<module>) - 2020-08-05 22:15:41.799542: dynamo.py --timeout=300 /tools/dynamite/benchmarks/nla-term/geo1-both-t.c -t
/tools/SageMath/local/lib/python3.7/site-packages/pyximport/pyximport.py:51: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
analysis:150:DEBUG (__init__) - Create C source for mainQ: /var/tmp/Dig_5jgdww0j
analysis:158:DEBUG (__init__) - trans_cmd: /tools/dynamite/deps/dynamite-instr/src/cil/bin/cilly --save-temps -D HAPPY_MOOD --dotransform /tools/dynamite/benchmarks/nla-term/geo1-both-t.c --out=/var/tmp/Dig_5jgdww0j/geo1-both-t.c --bnd=500
analysis:165:DEBUG (__init__) - cg: defaultdict(<class 'list'>, {'vloop_18': ['exit'], 'mainQ': ['vloop_18'], 'main': ['mainQ']})
analysis:176:DEBUG (__init__) - postorder_vloop_ids: ['vloop_18']
analysis:185:DEBUG (__init__) - inp_decls (<class 'data.prog.Symbs'>): I z, I k
analysis:186:DEBUG (__init__) - inv_decls (<class 'data.prog.DSymbs'>): {'vtrace1_18': (Symb(name='z', typ='I'), Symb(name='k', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='c', typ='I')), 'vtrace2_18': (Symb(name='z', typ='I'), Symb(name='k', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='c', typ='I')), 'vtrace3_18': (Symb(name='z', typ='I'), Symb(name='k', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='c', typ='I'))}
__main__:163:DEBUG (<module>) - prove_process: 19451
lib:49:DEBUG (gen_rand_inps) - gen 107/100 random inps
utils.profiling:31:DEBUG (timed) - gen_rand_inps: 123.39ms
lib:60:DEBUG (get_traces_from_inps) - inp_decls: I z, I k
lib:61:DEBUG (get_traces_from_inps) - inv_decls: {'vtrace1_18': (Symb(name='z', typ='I'), Symb(name='k', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='c', typ='I')), 'vtrace2_18': (Symb(name='z', typ='I'), Symb(name='k', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='c', typ='I')), 'vtrace3_18': (Symb(name='z', typ='I'), Symb(name='k', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='c', typ='I'))}
utils.profiling:31:DEBUG (timed) - _get_traces_mp: 154.79ms
utils.profiling:31:DEBUG (timed) - _merge_traces: 124.97ms
utils.profiling:31:DEBUG (timed) - get_traces_from_inps: 280.33ms
analysis:1025:DEBUG (prove) - itraces: 107
analysis:1029:DEBUG (prove) - Analysing Termination vloop_18
analysis:997:DEBUG (prove_term_vloop) - classify_inps: vloop_18
analysis:1000:DEBUG (prove_term_vloop) - itraces: 107
lib:214:DEBUG (print_inps) - z=-277,k=11: [('vtrace1_18', 1), ('vtrace2_18', 10), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-292,k=-3: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=299,k=9: [('vtrace1_18', 1), ('vtrace2_18', 8), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=11,k=-29: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=13,k=-12: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-287,k=5: [('vtrace1_18', 1), ('vtrace2_18', 4), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-296,k=-271: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-6,k=-6: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=287,k=286: [('vtrace1_18', 1), ('vtrace2_18', 285), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-2,k=-8: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=26,k=-282: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-20,k=270: [('vtrace1_18', 1), ('vtrace2_18', 269), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-288,k=-17: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=274,k=297: [('vtrace1_18', 1), ('vtrace2_18', 296), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-13,k=-12: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=3,k=28: [('vtrace1_18', 1), ('vtrace2_18', 27), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=279,k=4: [('vtrace1_18', 1), ('vtrace2_18', 3), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=6,k=280: [('vtrace1_18', 1), ('vtrace2_18', 279), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-7,k=-295: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=299,k=12: [('vtrace1_18', 1), ('vtrace2_18', 11), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=4,k=-11: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-4,k=-274: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-13,k=-13: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=6,k=14: [('vtrace1_18', 1), ('vtrace2_18', 13), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=5,k=-278: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-10,k=27: [('vtrace1_18', 1), ('vtrace2_18', 26), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=5,k=0: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-289,k=295: [('vtrace1_18', 1), ('vtrace2_18', 294), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-292,k=-5: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=285,k=-24: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-1,k=10: [('vtrace1_18', 1), ('vtrace2_18', 9), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=1,k=12: [('vtrace1_18', 1), ('vtrace2_18', 11), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=8,k=9: [('vtrace1_18', 1), ('vtrace2_18', 8), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=289,k=-293: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=3,k=11: [('vtrace1_18', 1), ('vtrace2_18', 10), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-16,k=1: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-12,k=297: [('vtrace1_18', 1), ('vtrace2_18', 296), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=297,k=-9: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-285,k=1: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=13,k=272: [('vtrace1_18', 1), ('vtrace2_18', 271), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=20,k=-284: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-295,k=12: [('vtrace1_18', 1), ('vtrace2_18', 11), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=12,k=25: [('vtrace1_18', 1), ('vtrace2_18', 24), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-284,k=289: [('vtrace1_18', 1), ('vtrace2_18', 288), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-6,k=7: [('vtrace1_18', 1), ('vtrace2_18', 6), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-25,k=-15: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=290,k=-13: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=21,k=285: [('vtrace1_18', 1), ('vtrace2_18', 284), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-15,k=17: [('vtrace1_18', 1), ('vtrace2_18', 16), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-278,k=12: [('vtrace1_18', 1), ('vtrace2_18', 11), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=17,k=-30: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=288,k=296: [('vtrace1_18', 1), ('vtrace2_18', 295), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=5,k=26: [('vtrace1_18', 1), ('vtrace2_18', 25), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-6,k=9: [('vtrace1_18', 1), ('vtrace2_18', 8), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-294,k=-11: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-8,k=-20: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-15,k=-290: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=276,k=21: [('vtrace1_18', 1), ('vtrace2_18', 20), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=27,k=1: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-298,k=-11: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=284,k=-14: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=6,k=278: [('vtrace1_18', 1), ('vtrace2_18', 277), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-294,k=-290: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=14,k=7: [('vtrace1_18', 1), ('vtrace2_18', 6), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=14,k=-292: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=9,k=-27: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=295,k=-290: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=23,k=-5: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=7,k=-290: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-5,k=4: [('vtrace1_18', 1), ('vtrace2_18', 3), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-13,k=-291: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-9,k=-3: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-11,k=-20: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=5,k=-23: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=12,k=-12: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-15,k=-25: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-15,k=-9: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-14,k=-6: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=22,k=-9: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=297,k=0: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=287,k=-7: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-24,k=270: [('vtrace1_18', 1), ('vtrace2_18', 269), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-9,k=13: [('vtrace1_18', 1), ('vtrace2_18', 12), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-296,k=277: [('vtrace1_18', 1), ('vtrace2_18', 276), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=14,k=295: [('vtrace1_18', 1), ('vtrace2_18', 294), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-11,k=-9: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=13,k=-290: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-23,k=-279: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-13,k=18: [('vtrace1_18', 1), ('vtrace2_18', 17), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-10,k=298: [('vtrace1_18', 1), ('vtrace2_18', 297), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=4,k=-8: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=281,k=6: [('vtrace1_18', 1), ('vtrace2_18', 5), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=29,k=281: [('vtrace1_18', 1), ('vtrace2_18', 280), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-22,k=5: [('vtrace1_18', 1), ('vtrace2_18', 4), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=273,k=-3: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=10,k=-5: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-2,k=2: [('vtrace1_18', 1), ('vtrace2_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-7,k=16: [('vtrace1_18', 1), ('vtrace2_18', 15), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-1,k=280: [('vtrace1_18', 1), ('vtrace2_18', 279), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=272,k=-293: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=2,k=-3: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-278,k=14: [('vtrace1_18', 1), ('vtrace2_18', 13), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=16,k=3: [('vtrace1_18', 1), ('vtrace2_18', 2), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-19,k=-277: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-300,k=-299: [('vtrace1_18', 1), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=-13,k=283: [('vtrace1_18', 1), ('vtrace2_18', 282), ('vtrace3_18', 1)]
lib:214:DEBUG (print_inps) - z=5,k=9: [('vtrace1_18', 1), ('vtrace2_18', 8), ('vtrace3_18', 1)]
analysis:1002:DEBUG (prove_term_vloop) - base_term_inps: 58
analysis:1003:DEBUG (prove_term_vloop) - term_inps: 49
analysis:1004:DEBUG (prove_term_vloop) - mayloop_inps: 0
analysis:857:DEBUG (infer_ranking_functions) - vloop: vloop_18
analysis:858:DEBUG (infer_ranking_functions) - term_itraces: 49
analysis:905:DEBUG (infer_ranking_functions) - train_rand_trans: 891
analysis:912:DEBUG (_infer_ranking_functions_from_trans) - rnk_template (<class 'sage.symbolic.expression.Expression'>): k*uk_2 + c*uk_5 + uk_3*x + uk_4*y + uk_1*z + uk_0
analysis:913:DEBUG (_infer_ranking_functions_from_trans) - uks: [uk_0, uk_1, uk_2, uk_3, uk_4, uk_5]
analysis:937:DEBUG (_infer_ranking_functions_from_trans) - train_term_rand_trans: 891
analysis:943:DEBUG (_infer_ranking_functions_from_trans) - t1: uk_0 + 5*uk_1 + 9*uk_2 + 6*uk_3 + 25*uk_4 + 2*uk_5
analysis:944:DEBUG (_infer_ranking_functions_from_trans) - t2: uk_0 + 5*uk_1 + 9*uk_2 + 19531*uk_3 + 78125*uk_4 + 7*uk_5
analysis:946:DEBUG (_infer_ranking_functions_from_trans) - model: [uk_1 = 0,
 uk_5 = -1,
 uk_4 = 0,
 uk_3 = 0,
 uk_2 = 1,
 uk_0 = 0]
analysis:950:DEBUG (_infer_ranking_functions_from_trans) - rf: k + -1*c
analysis:956:DEBUG (_infer_ranking_functions_from_trans) - train_term_rand_trans: 0
analysis:957:DEBUG (_infer_ranking_functions_from_trans) - ranking_function_list: [k + -1*c]
utils.profiling:31:DEBUG (timed) - infer_ranking_functions: 5638.36ms
analysis:1013:DEBUG (prove_term_vloop) - validate_ranking_functions: vloop_18
analysis:964:DEBUG (validate_ranking_functions) - ranks_str: k + -1*c
validate:124:DEBUG (gen_validate_file) - validate_cmd: /tools/dynamite/deps/dynamite-instr/src/cil/bin/cilly --save-temps -D HAPPY_MOOD --dovalidate /tools/dynamite/benchmarks/nla-term/geo1-both-t.c --out=/var/tmp/Dig_5jgdww0j/vloop_18/par/validate/geo1-both-t.c --pos=18 --ranks="k + -1*c"
validate:41:DEBUG (prove_reach) - pcmd: /tools/CPAchecker-1.9-unix/scripts/cpa.sh -spec /tools/reachability.prp -predicateAnalysis -setprop counterexample.export.compressWitness=false /var/tmp/Dig_5jgdww0j/vloop_18/par/validate/geo1-both-t.c
validate:41:DEBUG (prove_reach) - pcmd: /tools/ultimate/releaseScripts/default/UAutomizer-linux/Ultimate.py --spec /tools/reachability.prp --architecture 32bit --witness-dir /var/tmp/Dig_5jgdww0j/vloop_18/par/uatm --witness-name witness.graphml --file /var/tmp/Dig_5jgdww0j/vloop_18/par/validate/geo1-both-t.c
validate:41:DEBUG (prove_reach) - pcmd: /tools/ultimate/releaseScripts/default/UTaipan-linux/Ultimate.py --spec /tools/reachability.prp --architecture 32bit --witness-dir /var/tmp/Dig_5jgdww0j/vloop_18/par/utp --witness-name witness.graphml --file /var/tmp/Dig_5jgdww0j/vloop_18/par/validate/geo1-both-t.c
validate:46:DEBUG (prove_reach) - res: None
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      validate:46:DEBUG (prove_reach) - res: None
validate:46:DEBUG (prove_reach) - res: None
validate:254:DEBUG (prove_reach) - wrs: []
utils.profiling:31:DEBUG (timed) - prove_reach: 268748.60ms
analysis:977:DEBUG (validate_ranking_functions) - r: None
utils.profiling:31:DEBUG (timed) - validate_ranking_functions: 268918.93ms
analysis:1015:DEBUG (prove_term_vloop) - Termination result (vloop_32): None ([-1*r + k, -1*r + 2*k, -1*r + a, -1*r + 2*a, -1*r + 11*k, -1*r + 13*k, -1*r + 18*k, -1*r + 25*k, -1*r + 30*k, -1*r + -20*a + k, -1*r + -38*a, -1*r + -43*a, -1*r + 46*k, -1*r + 52*k, -1*r + 14*a, -1*r + 16*a, -1*r + 19*a, -1*r + 27*a, -1*r + 30*a, -1*r + 135*k, -1*r + 144*k])
utils.profiling:31:DEBUG (timed) - prove_term_vloop: 300346.71ms
utils.profiling:31:DEBUG (timed) - prove: 300886.12ms
utils.profiling:31:DEBUG (timed) - prove: 300886.33ms
Termination result: None
Time log:
gen_rand_inps: 0.109s
_get_traces_mp: 0.135s
_merge_traces: 0.285s
get_traces_from_inps: 0.421s
infer_ranking_functions: 31.404s
prove_reach: 268.749s
validate_ranking_functions: 268.919s
prove_term_vloop: 300.347s
prove: 300.886s

HARD TIMER: 300.000344

