__main__:113:INFO (<module>) - Dynamite's logger_level: DEBUG
__main__:114:INFO (<module>) - Dig's logger_level: WARNING
__main__:115:INFO (<module>) - Timeout: 300s
__main__:117:INFO (<module>) - 2020-08-05 22:50:44.255806: dynamo.py --timeout=300 /tools/dynamite/benchmarks/nla-term/lcm2-both-t.c -t
/tools/SageMath/local/lib/python3.7/site-packages/pyximport/pyximport.py:51: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
analysis:150:DEBUG (__init__) - Create C source for mainQ: /var/tmp/Dig_j2vqndhh
analysis:158:DEBUG (__init__) - trans_cmd: /tools/dynamite/deps/dynamite-instr/src/cil/bin/cilly --save-temps -D HAPPY_MOOD --dotransform /tools/dynamite/benchmarks/nla-term/lcm2-both-t.c --out=/var/tmp/Dig_j2vqndhh/lcm2-both-t.c --bnd=500
analysis:165:DEBUG (__init__) - cg: defaultdict(<class 'list'>, {'vloop_25': ['exit'], 'mainQ': ['vloop_25'], 'main': ['mainQ']})
analysis:176:DEBUG (__init__) - postorder_vloop_ids: ['vloop_25']
analysis:185:DEBUG (__init__) - inp_decls (<class 'data.prog.Symbs'>): I a, I b
analysis:186:DEBUG (__init__) - inv_decls (<class 'data.prog.DSymbs'>): {'vtrace1_25': (Symb(name='a', typ='I'), Symb(name='b', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='u', typ='I'), Symb(name='v', typ='I')), 'vtrace2_25': (Symb(name='a', typ='I'), Symb(name='b', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='u', typ='I'), Symb(name='v', typ='I')), 'vtrace3_25': (Symb(name='a', typ='I'), Symb(name='b', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='u', typ='I'), Symb(name='v', typ='I'))}
__main__:163:DEBUG (<module>) - prove_process: 7156
lib:49:DEBUG (gen_rand_inps) - gen 103/100 random inps
utils.profiling:31:DEBUG (timed) - gen_rand_inps: 108.38ms
lib:60:DEBUG (get_traces_from_inps) - inp_decls: I a, I b
lib:61:DEBUG (get_traces_from_inps) - inv_decls: {'vtrace1_25': (Symb(name='a', typ='I'), Symb(name='b', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='u', typ='I'), Symb(name='v', typ='I')), 'vtrace2_25': (Symb(name='a', typ='I'), Symb(name='b', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='u', typ='I'), Symb(name='v', typ='I')), 'vtrace3_25': (Symb(name='a', typ='I'), Symb(name='b', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='u', typ='I'), Symb(name='v', typ='I'))}
utils.profiling:31:DEBUG (timed) - _get_traces_mp: 158.58ms
utils.profiling:31:DEBUG (timed) - _merge_traces: 134.18ms
utils.profiling:31:DEBUG (timed) - get_traces_from_inps: 293.29ms
analysis:1025:DEBUG (prove) - itraces: 103
analysis:1029:DEBUG (prove) - Analysing Termination vloop_25
analysis:997:DEBUG (prove_term_vloop) - classify_inps: vloop_25
analysis:1000:DEBUG (prove_term_vloop) - itraces: 103
lib:214:DEBUG (print_inps) - a=18,b=19: [('vtrace1_25', 1), ('vtrace2_25', 18), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=9,b=2: [('vtrace1_25', 1), ('vtrace2_25', 5), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=288,b=5: [('vtrace1_25', 1), ('vtrace2_25', 60), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=20,b=18: [('vtrace1_25', 1), ('vtrace2_25', 9), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=10,b=296: [('vtrace1_25', 1), ('vtrace2_25', 32), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=7,b=282: [('vtrace1_25', 1), ('vtrace2_25', 44), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=1,b=9: [('vtrace1_25', 1), ('vtrace2_25', 8), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=276,b=292: [('vtrace1_25', 1), ('vtrace2_25', 21), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=7,b=5: [('vtrace1_25', 1), ('vtrace2_25', 4), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=274,b=279: [('vtrace1_25', 1), ('vtrace2_25', 59), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=6,b=5: [('vtrace1_25', 1), ('vtrace2_25', 5), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=2,b=10: [('vtrace1_25', 1), ('vtrace2_25', 4), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=277,b=14: [('vtrace1_25', 1), ('vtrace2_25', 25), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=2,b=17: [('vtrace1_25', 1), ('vtrace2_25', 9), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=282,b=1: [('vtrace1_25', 1), ('vtrace2_25', 281), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=1,b=295: [('vtrace1_25', 1), ('vtrace2_25', 294), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=270,b=6: [('vtrace1_25', 1), ('vtrace2_25', 44), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=18,b=294: [('vtrace1_25', 1), ('vtrace2_25', 18), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=3,b=23: [('vtrace1_25', 1), ('vtrace2_25', 9), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=291,b=5: [('vtrace1_25', 1), ('vtrace2_25', 62), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=273,b=293: [('vtrace1_25', 1), ('vtrace2_25', 22), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=29,b=285: [('vtrace1_25', 1), ('vtrace2_25', 18), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=292,b=292: [('vtrace1_25', 1), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=277,b=10: [('vtrace1_25', 1), ('vtrace2_25', 32), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=13,b=23: [('vtrace1_25', 1), ('vtrace2_25', 7), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=295,b=12: [('vtrace1_25', 1), ('vtrace2_25', 29), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=22,b=18: [('vtrace1_25', 1), ('vtrace2_25', 6), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=2,b=0: []
lib:214:DEBUG (print_inps) - a=271,b=18: [('vtrace1_25', 1), ('vtrace2_25', 32), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=13,b=296: [('vtrace1_25', 1), ('vtrace2_25', 28), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=279,b=4: [('vtrace1_25', 1), ('vtrace2_25', 72), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=272,b=22: [('vtrace1_25', 1), ('vtrace2_25', 17), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=13,b=281: [('vtrace1_25', 1), ('vtrace2_25', 26), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=273,b=1: [('vtrace1_25', 1), ('vtrace2_25', 272), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=286,b=278: [('vtrace1_25', 1), ('vtrace2_25', 38), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=14,b=3: [('vtrace1_25', 1), ('vtrace2_25', 6), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=28,b=2: [('vtrace1_25', 1), ('vtrace2_25', 13), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=297,b=2: [('vtrace1_25', 1), ('vtrace2_25', 149), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=4,b=296: [('vtrace1_25', 1), ('vtrace2_25', 73), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=2,b=20: [('vtrace1_25', 1), ('vtrace2_25', 9), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=1,b=25: [('vtrace1_25', 1), ('vtrace2_25', 24), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=8,b=288: [('vtrace1_25', 1), ('vtrace2_25', 35), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=3,b=290: [('vtrace1_25', 1), ('vtrace2_25', 98), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=286,b=2: [('vtrace1_25', 1), ('vtrace2_25', 142), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=5,b=18: [('vtrace1_25', 1), ('vtrace2_25', 6), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=7,b=9: [('vtrace1_25', 1), ('vtrace2_25', 5), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=10,b=271: [('vtrace1_25', 1), ('vtrace2_25', 36), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=6,b=23: [('vtrace1_25', 1), ('vtrace2_25', 8), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=3,b=271: [('vtrace1_25', 1), ('vtrace2_25', 92), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=7,b=13: [('vtrace1_25', 1), ('vtrace2_25', 7), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=12,b=1: [('vtrace1_25', 1), ('vtrace2_25', 11), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=291,b=279: [('vtrace1_25', 1), ('vtrace2_25', 27), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=284,b=3: [('vtrace1_25', 1), ('vtrace2_25', 96), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=6,b=2: [('vtrace1_25', 1), ('vtrace2_25', 2), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=11,b=275: [('vtrace1_25', 1), ('vtrace2_25', 24), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=9,b=281: [('vtrace1_25', 1), ('vtrace2_25', 36), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=282,b=14: [('vtrace1_25', 1), ('vtrace2_25', 26), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=9,b=278: [('vtrace1_25', 1), ('vtrace2_25', 38), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=21,b=277: [('vtrace1_25', 1), ('vtrace2_25', 21), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=277,b=3: [('vtrace1_25', 1), ('vtrace2_25', 94), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=296,b=280: [('vtrace1_25', 1), ('vtrace2_25', 19), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=8,b=289: [('vtrace1_25', 1), ('vtrace2_25', 43), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=13,b=9: [('vtrace1_25', 1), ('vtrace2_25', 6), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=292,b=0: []
lib:214:DEBUG (print_inps) - a=2,b=3: [('vtrace1_25', 1), ('vtrace2_25', 2), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=282,b=5: [('vtrace1_25', 1), ('vtrace2_25', 59), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=290,b=12: [('vtrace1_25', 1), ('vtrace2_25', 29), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=272,b=27: [('vtrace1_25', 1), ('vtrace2_25', 24), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=8,b=286: [('vtrace1_25', 1), ('vtrace2_25', 38), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=271,b=10: [('vtrace1_25', 1), ('vtrace2_25', 36), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=280,b=285: [('vtrace1_25', 1), ('vtrace2_25', 56), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=8,b=3: [('vtrace1_25', 1), ('vtrace2_25', 4), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=6,b=16: [('vtrace1_25', 1), ('vtrace2_25', 4), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=2,b=8: [('vtrace1_25', 1), ('vtrace2_25', 3), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=25,b=290: [('vtrace1_25', 1), ('vtrace2_25', 14), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=293,b=25: [('vtrace1_25', 1), ('vtrace2_25', 18), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=9,b=19: [('vtrace1_25', 1), ('vtrace2_25', 10), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=281,b=299: [('vtrace1_25', 1), ('vtrace2_25', 22), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=270,b=298: [('vtrace1_25', 1), ('vtrace2_25', 16), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=13,b=290: [('vtrace1_25', 1), ('vtrace2_25', 28), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=5,b=8: [('vtrace1_25', 1), ('vtrace2_25', 4), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=10,b=2: [('vtrace1_25', 1), ('vtrace2_25', 4), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=0,b=12: []
lib:214:DEBUG (print_inps) - a=295,b=277: [('vtrace1_25', 1), ('vtrace2_25', 22), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=0,b=14: []
lib:214:DEBUG (print_inps) - a=288,b=23: [('vtrace1_25', 1), ('vtrace2_25', 24), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=299,b=6: [('vtrace1_25', 1), ('vtrace2_25', 54), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=298,b=9: [('vtrace1_25', 1), ('vtrace2_25', 41), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=13,b=4: [('vtrace1_25', 1), ('vtrace2_25', 6), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=0,b=27: []
lib:214:DEBUG (print_inps) - a=3,b=19: [('vtrace1_25', 1), ('vtrace2_25', 8), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=276,b=275: [('vtrace1_25', 1), ('vtrace2_25', 275), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=17,b=17: [('vtrace1_25', 1), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=17,b=25: [('vtrace1_25', 1), ('vtrace2_25', 10), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=12,b=10: [('vtrace1_25', 1), ('vtrace2_25', 5), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=270,b=23: [('vtrace1_25', 1), ('vtrace2_25', 19), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=14,b=17: [('vtrace1_25', 1), ('vtrace2_25', 7), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=5,b=283: [('vtrace1_25', 1), ('vtrace2_25', 59), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=5,b=295: [('vtrace1_25', 1), ('vtrace2_25', 58), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=1,b=284: [('vtrace1_25', 1), ('vtrace2_25', 283), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=21,b=285: [('vtrace1_25', 1), ('vtrace2_25', 17), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=5,b=278: [('vtrace1_25', 1), ('vtrace2_25', 58), ('vtrace3_25', 1)]
lib:214:DEBUG (print_inps) - a=16,b=282: [('vtrace1_25', 1), ('vtrace2_25', 21), ('vtrace3_25', 1)]
analysis:1002:DEBUG (prove_term_vloop) - base_term_inps: 2
analysis:1003:DEBUG (prove_term_vloop) - term_inps: 96
analysis:1004:DEBUG (prove_term_vloop) - mayloop_inps: 0
analysis:857:DEBUG (infer_ranking_functions) - vloop: vloop_25
analysis:858:DEBUG (infer_ranking_functions) - term_itraces: 96
analysis:905:DEBUG (infer_ranking_functions) - train_rand_trans: 1792
analysis:912:DEBUG (_infer_ranking_functions_from_trans) - rnk_template (<class 'sage.symbolic.expression.Expression'>): a*uk_1 + b*uk_2 + u*uk_5 + uk_6*v + uk_3*x + uk_4*y + uk_0
analysis:913:DEBUG (_infer_ranking_functions_from_trans) - uks: [uk_0, uk_1, uk_2, uk_3, uk_4, uk_5, uk_6]
analysis:937:DEBUG (_infer_ranking_functions_from_trans) - train_term_rand_trans: 1792
analysis:943:DEBUG (_infer_ranking_functions_from_trans) - t1: uk_0 +
16*uk_1 +
282*uk_2 +
16*uk_3 +
250*uk_4 +
314*uk_5 +
16*uk_6
analysis:944:DEBUG (_infer_ranking_functions_from_trans) - t2: uk_0 +
16*uk_1 +
282*uk_2 +
2*uk_3 +
4*uk_4 +
1124*uk_5 +
1694*uk_6
analysis:946:DEBUG (_infer_ranking_functions_from_trans) - model: [uk_1 = 0,
 uk_6 = 0,
 uk_3 = 0,
 uk_4 = 1,
 uk_5 = 0,
 uk_2 = 0,
 uk_0 = 0]
analysis:950:DEBUG (_infer_ranking_functions_from_trans) - rf: y
analysis:956:DEBUG (_infer_ranking_functions_from_trans) - train_term_rand_trans: 547
analysis:943:DEBUG (_infer_ranking_functions_from_trans) - t1: uk_0 +
16*uk_1 +
282*uk_2 +
16*uk_3 +
10*uk_4 +
554*uk_5 +
16*uk_6
analysis:944:DEBUG (_infer_ranking_functions_from_trans) - t2: uk_0 +
16*uk_1 +
282*uk_2 +
6*uk_3 +
10*uk_4 +
554*uk_5 +
570*uk_6
analysis:946:DEBUG (_infer_ranking_functions_from_trans) - model: [uk_1 = 0,
 uk_6 = 0,
 uk_3 = 1,
 uk_4 = 0,
 uk_5 = 0,
 uk_2 = 0,
 uk_0 = 0]
analysis:950:DEBUG (_infer_ranking_functions_from_trans) - rf: x
analysis:956:DEBUG (_infer_ranking_functions_from_trans) - train_term_rand_trans: 0
analysis:957:DEBUG (_infer_ranking_functions_from_trans) - ranking_function_list: [y, x]
utils.profiling:31:DEBUG (timed) - infer_ranking_functions: 16574.37ms
analysis:1013:DEBUG (prove_term_vloop) - validate_ranking_functions: vloop_25
analysis:964:DEBUG (validate_ranking_functions) - ranks_str: y|x
validate:124:DEBUG (gen_validate_file) - validate_cmd: /tools/dynamite/deps/dynamite-instr/src/cil/bin/cilly --save-temps -D HAPPY_MOOD --dovalidate /tools/dynamite/benchmarks/nla-term/lcm2-both-t.c --out=/var/tmp/Dig_j2vqndhh/vloop_25/par/validate/lcm2-both-t.c --pos=25 --ranks="y|x"
validate:41:DEBUG (prove_reach) - pcmd: /tools/CPAchecker-1.9-unix/scripts/cpa.sh -spec /tools/reachability.prp -predicateAnalysis -setprop counterexample.export.compressWitness=false /var/tmp/Dig_j2vqndhh/vloop_25/par/validate/lcm2-both-t.c
validate:41:DEBUG (prove_reach) - pcmd: /tools/ultimate/releaseScripts/default/UAutomizer-linux/Ultimate.py --spec /tools/reachability.prp --architecture 32bit --witness-dir /var/tmp/Dig_j2vqndhh/vloop_25/par/uatm --witness-name witness.graphml --file /var/tmp/Dig_j2vqndhh/vloop_25/par/validate/lcm2-both-t.c
validate:41:DEBUG (prove_reach) - pcmd: /tools/ultimate/releaseScripts/default/UTaipan-linux/Ultimate.py --spec /tools/reachability.prp --architecture 32bit --witness-dir /var/tmp/Dig_j2vqndhh/vloop_25/par/utp --witness-name witness.graphml --file /var/tmp/Dig_j2vqndhh/vloop_25/par/validate/lcm2-both-t.c
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           validate:46:DEBUG (prove_reach) - res: None
validate:46:DEBUG (prove_reach) - res: None
validate:46:DEBUG (prove_reach) - res: None
validate:254:DEBUG (prove_reach) - wrs: []
utils.profiling:31:DEBUG (timed) - prove_reach: 276297.81ms
analysis:977:DEBUG (validate_ranking_functions) - r: None
utils.profiling:31:DEBUG (timed) - validate_ranking_functions: 276454.52ms
analysis:1015:DEBUG (prove_term_vloop) - Termination result (vloop_33): None ([y, -1*v, u, u + -1*y, x])
utils.profiling:31:DEBUG (timed) - prove_term_vloop: 300922.61ms
utils.profiling:31:DEBUG (timed) - prove: 301339.66ms
utils.profiling:31:DEBUG (timed) - prove: 301339.84ms
Termination result: None
Time log:
gen_rand_inps: 0.126s
_get_traces_mp: 0.167s
_merge_traces: 0.121s
get_traces_from_inps: 0.288s
infer_ranking_functions: 24.462s
prove_reach: 276.298s
validate_ranking_functions: 276.455s
prove_term_vloop: 300.923s
prove: 301.340s

HARD TIMER: 300.000247

