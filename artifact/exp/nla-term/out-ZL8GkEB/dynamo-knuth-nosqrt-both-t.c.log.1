__main__:113:INFO (<module>) - Dynamite's logger_level: DEBUG
__main__:114:INFO (<module>) - Dig's logger_level: WARNING
__main__:115:INFO (<module>) - Timeout: 300s
__main__:117:INFO (<module>) - 2020-08-05 22:40:44.088998: dynamo.py --timeout=300 /tools/dynamite/benchmarks/nla-term/knuth-nosqrt-both-t.c -t
/tools/SageMath/local/lib/python3.7/site-packages/pyximport/pyximport.py:51: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
analysis:150:DEBUG (__init__) - Create C source for mainQ: /var/tmp/Dig_8xv4j63j
analysis:158:DEBUG (__init__) - trans_cmd: /tools/dynamite/deps/dynamite-instr/src/cil/bin/cilly --save-temps -D HAPPY_MOOD --dotransform /tools/dynamite/benchmarks/nla-term/knuth-nosqrt-both-t.c --out=/var/tmp/Dig_8xv4j63j/knuth-nosqrt-both-t.c --bnd=500
analysis:165:DEBUG (__init__) - cg: defaultdict(<class 'list'>, {'vloop_31': ['exit'], 'mainQ': ['vloop_31'], 'main': ['mainQ']})
analysis:176:DEBUG (__init__) - postorder_vloop_ids: ['vloop_31']
analysis:185:DEBUG (__init__) - inp_decls (<class 'data.prog.Symbs'>): I s, I a
analysis:186:DEBUG (__init__) - inv_decls (<class 'data.prog.DSymbs'>): {'vtrace1_31': (Symb(name='s', typ='I'), Symb(name='a', typ='I'), Symb(name='r', typ='I'), Symb(name='k', typ='I'), Symb(name='q', typ='I'), Symb(name='d', typ='I'), Symb(name='t', typ='I')), 'vtrace2_31': (Symb(name='s', typ='I'), Symb(name='a', typ='I'), Symb(name='r', typ='I'), Symb(name='k', typ='I'), Symb(name='q', typ='I'), Symb(name='d', typ='I'), Symb(name='t', typ='I')), 'vtrace3_31': (Symb(name='s', typ='I'), Symb(name='a', typ='I'), Symb(name='r', typ='I'), Symb(name='k', typ='I'), Symb(name='q', typ='I'), Symb(name='d', typ='I'), Symb(name='t', typ='I'))}
__main__:163:DEBUG (<module>) - prove_process: 1982
lib:49:DEBUG (gen_rand_inps) - gen 100/100 random inps
utils.profiling:31:DEBUG (timed) - gen_rand_inps: 109.52ms
lib:60:DEBUG (get_traces_from_inps) - inp_decls: I s, I a
lib:61:DEBUG (get_traces_from_inps) - inv_decls: {'vtrace1_31': (Symb(name='s', typ='I'), Symb(name='a', typ='I'), Symb(name='r', typ='I'), Symb(name='k', typ='I'), Symb(name='q', typ='I'), Symb(name='d', typ='I'), Symb(name='t', typ='I')), 'vtrace2_31': (Symb(name='s', typ='I'), Symb(name='a', typ='I'), Symb(name='r', typ='I'), Symb(name='k', typ='I'), Symb(name='q', typ='I'), Symb(name='d', typ='I'), Symb(name='t', typ='I')), 'vtrace3_31': (Symb(name='s', typ='I'), Symb(name='a', typ='I'), Symb(name='r', typ='I'), Symb(name='k', typ='I'), Symb(name='q', typ='I'), Symb(name='d', typ='I'), Symb(name='t', typ='I'))}
utils.profiling:31:DEBUG (timed) - _get_traces_mp: 128.02ms
utils.profiling:31:DEBUG (timed) - _merge_traces: 81.69ms
utils.profiling:31:DEBUG (timed) - get_traces_from_inps: 210.32ms
analysis:1025:DEBUG (prove) - itraces: 100
analysis:1029:DEBUG (prove) - Analysing Termination vloop_31
analysis:997:DEBUG (prove_term_vloop) - classify_inps: vloop_31
analysis:1000:DEBUG (prove_term_vloop) - itraces: 100
lib:214:DEBUG (print_inps) - s=5,a=-297: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=12,a=-13: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=296,a=-3: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=270,a=-297: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=4,a=285: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=296,a=7: [('vtrace1_31', 1), ('vtrace2_31', 145), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=20,a=-6: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=280,a=23: [('vtrace1_31', 1), ('vtrace2_31', 129), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=13,a=7: [('vtrace1_31', 1), ('vtrace2_31', 4), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=29,a=-21: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=286,a=-281: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=8,a=-4: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=287,a=13: [('vtrace1_31', 1), ('vtrace2_31', 138), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=7,a=-12: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=10,a=-282: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=279,a=1: []
lib:214:DEBUG (print_inps) - s=8,a=19: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=271,a=288: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=295,a=288: [('vtrace1_31', 1), ('vtrace2_31', 4), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=3,a=20: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=9,a=-7: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=8,a=-295: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=298,a=293: [('vtrace1_31', 1), ('vtrace2_31', 3), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=3,a=22: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=8,a=-293: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=288,a=4: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=280,a=-3: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=2,a=22: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=295,a=-286: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=278,a=21: [('vtrace1_31', 1), ('vtrace2_31', 129), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=3,a=-277: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=9,a=287: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=4,a=-13: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=9,a=-1: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=298,a=-3: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=298,a=9: [('vtrace1_31', 1), ('vtrace2_31', 145), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=298,a=-7: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=288,a=-8: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=6,a=-291: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=25,a=-280: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=7,a=-300: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=6,a=-18: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=6,a=287: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=9,a=-2: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=6,a=-9: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=10,a=-1: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=22,a=-279: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=14,a=-4: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=2,a=6: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=0,a=-297: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=12,a=5: [('vtrace1_31', 1), ('vtrace2_31', 4), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=7,a=-3: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=276,a=12: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=19,a=6: [('vtrace1_31', 1), ('vtrace2_31', 7), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=6,a=2: []
lib:214:DEBUG (print_inps) - s=25,a=-8: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=279,a=-289: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=277,a=22: [('vtrace1_31', 1), ('vtrace2_31', 128), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=14,a=-298: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=21,a=-6: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=1,a=-20: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=4,a=10: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=10,a=289: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=11,a=5: [('vtrace1_31', 1), ('vtrace2_31', 4), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=0,a=3: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=13,a=-296: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=0,a=-20: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=285,a=22: [('vtrace1_31', 1), ('vtrace2_31', 132), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=0,a=293: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=291,a=-1: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=284,a=295: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=8,a=274: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=291,a=-20: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=5,a=19: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=275,a=-20: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=272,a=-12: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=280,a=-278: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=0,a=15: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=1,a=298: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=0,a=-15: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=3,a=-3: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=270,a=275: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=4,a=275: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=270,a=8: [('vtrace1_31', 1), ('vtrace2_31', 132), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=295,a=-15: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=280,a=10: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=11,a=-9: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=3,a=295: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=11,a=-1: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=8,a=-2: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=12,a=292: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=296,a=-13: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=296,a=-293: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=20,a=1: []
lib:214:DEBUG (print_inps) - s=7,a=-1: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=13,a=26: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=1,a=288: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=281,a=291: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=279,a=-15: [('vtrace1_31', 1), ('vtrace3_31', 1)]
lib:214:DEBUG (print_inps) - s=14,a=7: [('vtrace1_31', 1), ('vtrace3_31', 1)]
analysis:1002:DEBUG (prove_term_vloop) - base_term_inps: 83
analysis:1003:DEBUG (prove_term_vloop) - term_inps: 14
analysis:1004:DEBUG (prove_term_vloop) - mayloop_inps: 0
analysis:857:DEBUG (infer_ranking_functions) - vloop: vloop_31
analysis:858:DEBUG (infer_ranking_functions) - term_itraces: 14
analysis:905:DEBUG (infer_ranking_functions) - train_rand_trans: 226
analysis:912:DEBUG (_infer_ranking_functions_from_trans) - rnk_template (<class 'sage.symbolic.expression.Expression'>): s*uk_1 + a*uk_2 + r*uk_3 + k*uk_4 + q*uk_5 + d*uk_6 + t*uk_7 + uk_0
analysis:913:DEBUG (_infer_ranking_functions_from_trans) - uks: [uk_0, uk_1, uk_2, uk_3, uk_4, uk_5, uk_6, uk_7]
analysis:937:DEBUG (_infer_ranking_functions_from_trans) - train_term_rand_trans: 226
analysis:943:DEBUG (_infer_ranking_functions_from_trans) - t1: uk_0 +
270*uk_1 +
8*uk_2 +
7557624*uk_3 +
7140140*uk_4 +
11872*uk_5 +
78*uk_6 +
7140140*uk_7
analysis:944:DEBUG (_infer_ranking_functions_from_trans) - t2: uk_0 +
270*uk_1 +
8*uk_2 +
50343876*uk_3 +
49277960*uk_4 +
11416*uk_5 +
192*uk_6 +
49277960*uk_7
analysis:946:DEBUG (_infer_ranking_functions_from_trans) - model: [uk_1 = 0,
 uk_6 = 0,
 uk_7 = 0,
 uk_3 = 0,
 uk_4 = 0,
 uk_5 = 1,
 uk_2 = 0,
 uk_0 = 0]
analysis:950:DEBUG (_infer_ranking_functions_from_trans) - rf: q
analysis:956:DEBUG (_infer_ranking_functions_from_trans) - train_term_rand_trans: 16
analysis:943:DEBUG (_infer_ranking_functions_from_trans) - t1: uk_0 +
298*uk_1 +
293*uk_2 +
uk_3 +
9*uk_4 +
8*uk_5 +
297*uk_6 +
9*uk_7
analysis:944:DEBUG (_infer_ranking_functions_from_trans) - t2: uk_0 +
298*uk_1 +
293*uk_2 +
uk_3 +
uk_4 +
8*uk_5 +
299*uk_6 +
uk_7
analysis:946:DEBUG (_infer_ranking_functions_from_trans) - model: [uk_1 = 0,
 uk_6 = 0,
 uk_7 = 1,
 uk_3 = 0,
 uk_4 = 0,
 uk_5 = 0,
 uk_2 = 0,
 uk_0 = 0]
analysis:950:DEBUG (_infer_ranking_functions_from_trans) - rf: t
analysis:956:DEBUG (_infer_ranking_functions_from_trans) - train_term_rand_trans: 7
analysis:943:DEBUG (_infer_ranking_functions_from_trans) - t1: uk_0 +
298*uk_1 +
293*uk_2 +
25*uk_3 +
49*uk_4 +
8*uk_5 +
293*uk_6
analysis:944:DEBUG (_infer_ranking_functions_from_trans) - t2: uk_0 +
298*uk_1 +
293*uk_2 +
9*uk_3 +
25*uk_4 +
8*uk_5 +
295*uk_6 +
25*uk_7
analysis:946:DEBUG (_infer_ranking_functions_from_trans) - model: [uk_1 = 0,
 uk_6 = 0,
 uk_7 = -1,
 uk_3 = 0,
 uk_4 = 0,
 uk_5 = 0,
 uk_2 = 0,
 uk_0 = 0]
analysis:950:DEBUG (_infer_ranking_functions_from_trans) - rf: -1*t
analysis:956:DEBUG (_infer_ranking_functions_from_trans) - train_term_rand_trans: 0
analysis:957:DEBUG (_infer_ranking_functions_from_trans) - ranking_function_list: [q, t, -1*t]
utils.profiling:31:DEBUG (timed) - infer_ranking_functions: 2619.45ms
analysis:1013:DEBUG (prove_term_vloop) - validate_ranking_functions: vloop_31
analysis:964:DEBUG (validate_ranking_functions) - ranks_str: q|t|-1*t
validate:124:DEBUG (gen_validate_file) - validate_cmd: /tools/dynamite/deps/dynamite-instr/src/cil/bin/cilly --save-temps -D HAPPY_MOOD --dovalidate /tools/dynamite/benchmarks/nla-term/knuth-nosqrt-both-t.c --out=/var/tmp/Dig_8xv4j63j/vloop_31/par/validate/knuth-nosqrt-both-t.c --pos=31 --ranks="q|t|-1*t"
validate:41:DEBUG (prove_reach) - pcmd: /tools/CPAchecker-1.9-unix/scripts/cpa.sh -spec /tools/reachability.prp -predicateAnalysis -setprop counterexample.export.compressWitness=false /var/tmp/Dig_8xv4j63j/vloop_31/par/validate/knuth-nosqrt-both-t.c
validate:41:DEBUG (prove_reach) - pcmd: /tools/ultimate/releaseScripts/default/UAutomizer-linux/Ultimate.py --spec /tools/reachability.prp --architecture 32bit --witness-dir /var/tmp/Dig_8xv4j63j/vloop_31/par/uatm --witness-name witness.graphml --file /var/tmp/Dig_8xv4j63j/vloop_31/par/validate/knuth-nosqrt-both-t.c
validate:41:DEBUG (prove_reach) - pcmd: /tools/ultimate/releaseScripts/default/UTaipan-linux/Ultimate.py --spec /tools/reachability.prp --architecture 32bit --witness-dir /var/tmp/Dig_8xv4j63j/vloop_31/par/utp --witness-name witness.graphml --file /var/tmp/Dig_8xv4j63j/vloop_31/par/validate/knuth-nosqrt-both-t.c
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      validate:46:DEBUG (prove_reach) - res: None
validate:46:DEBUG (prove_reach) - res: None
validate:254:DEBUG (prove_reach) - wrs: []
utils.profiling:31:DEBUG (timed) - prove_reach: 15576.27ms
analysis:977:DEBUG (validate_ranking_functions) - r: None
utils.profiling:31:DEBUG (timed) - validate_ranking_functions: 15714.35ms
analysis:1015:DEBUG (prove_term_vloop) - Termination result (vloop_29): None ([p])
utils.profiling:31:DEBUG (timed) - prove_term_vloop: 20127.22ms
utils.profiling:31:DEBUG (timed) - prove: 300331.66ms
utils.profiling:31:DEBUG (timed) - prove: 300331.86ms
Termination result: None
Time log:
gen_rand_inps: 0.044s
_get_traces_mp: 0.143s
_merge_traces: 0.077s
get_traces_from_inps: 0.221s
infer_ranking_functions: 7.715s
prove_reach: 292.065s
validate_ranking_functions: 292.342s
prove_term_vloop: 300.065s
prove: 300.332s

HARD TIMER: 300.000308

