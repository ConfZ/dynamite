__main__:118:INFO (<module>) - Dynamite's logger_level: DEBUG
__main__:119:INFO (<module>) - Dig's logger_level: WARNING
__main__:120:INFO (<module>) - Timeout: 300s
__main__:122:INFO (<module>) - 2020-08-08 01:01:35.589481: dynamo.py --timeout=300 /tools/dynamite/benchmarks/nla-nonterm/geo1-both-nt.c
/tools/SageMath/local/lib/python3.7/site-packages/pyximport/pyximport.py:51: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
analysis:155:DEBUG (__init__) - Create C source for mainQ: /var/tmp/Dig__qzkketf
analysis:163:DEBUG (__init__) - trans_cmd: /tools/dynamite/deps/dynamite-instr/src/cil/bin/cilly --save-temps -D HAPPY_MOOD --dotransform /tools/dynamite/benchmarks/nla-nonterm/geo1-both-nt.c --out=/var/tmp/Dig__qzkketf/geo1-both-nt.c --bnd=500
analysis:170:DEBUG (__init__) - cg: defaultdict(<class 'list'>, {'vloop_18': ['exit'], 'mainQ': ['vloop_18'], 'main': ['mainQ']})
analysis:181:DEBUG (__init__) - postorder_vloop_ids: ['vloop_18']
analysis:190:DEBUG (__init__) - inp_decls (<class 'data.prog.Symbs'>): I z, I k
analysis:191:DEBUG (__init__) - inv_decls (<class 'data.prog.DSymbs'>): {'vtrace1_18': (Symb(name='z', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='c', typ='I')), 'vtrace2_18': (Symb(name='z', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='c', typ='I')), 'vtrace3_18': (Symb(name='z', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='c', typ='I')), 'vtrace4_18': (Symb(name='z', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='c', typ='I'))}
__main__:168:DEBUG (<module>) - prove_process: 20862
lib:49:DEBUG (gen_rand_inps) - gen 108/100 random inps
utils.profiling:31:DEBUG (timed) - gen_rand_inps: 361.67ms
lib:60:DEBUG (get_traces_from_inps) - inp_decls: I z, I k
lib:61:DEBUG (get_traces_from_inps) - inv_decls: {'vtrace1_18': (Symb(name='z', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='c', typ='I')), 'vtrace2_18': (Symb(name='z', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='c', typ='I')), 'vtrace3_18': (Symb(name='z', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='c', typ='I')), 'vtrace4_18': (Symb(name='z', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='c', typ='I'))}
utils.profiling:31:DEBUG (timed) - _get_traces_mp: 417.03ms
utils.profiling:31:DEBUG (timed) - _merge_traces: 1744.68ms
utils.profiling:31:DEBUG (timed) - get_traces_from_inps: 2162.40ms
analysis:1372:DEBUG (prove) - Analysing vloop_18
analysis:1374:DEBUG (prove) - base_term_inps: 0
analysis:1375:DEBUG (prove) - term_inps: 0
analysis:1376:DEBUG (prove) - mayloop_inps: 108
analysis:1379:DEBUG (prove) - Proving Non-Termination: vloop_18
analysis:321:DEBUG (_get_stem_from_symstates) - vloop.preloop_loc: vtrace1_18
analysis:266:DEBUG (_get_symstates_from_src) - SymStatesC.maxdepth: 24
data.symstates:369:WARNING (merge) - vtrace1_18: no symbolic states at depth 23
data.symstates:369:WARNING (merge) - vtrace1_18: no symbolic states at depth 24
data.symstates:369:WARNING (merge) - vtrace1_18: no symbolic states at depth 21
data.symstates:369:WARNING (merge) - vtrace1_18: no symbolic states at depth 22
data.symstates:369:WARNING (merge) - vtrace2_18: no symbolic states at depth 23
data.symstates:369:WARNING (merge) - vtrace2_18: no symbolic states at depth 24
data.symstates:369:WARNING (merge) - vtrace2_18: no symbolic states at depth 21
data.symstates:369:WARNING (merge) - vtrace4_18: no symbolic states at depth 24
data.symstates:369:WARNING (merge) - vtrace4_18: no symbolic states at depth 21
data.symstates:369:WARNING (merge) - vtrace4_18: no symbolic states at depth 22
analysis:279:DEBUG (_get_symstates_from_src) - target_loc: vtrace1_18
utils.profiling:31:DEBUG (timed) - _get_symstates_from_src: 13114.82ms
analysis:307:DEBUG (_get_stem_from_ss) - preloop_fst_symstate: loc: vtrace1_18
pc: True
slocal: And(z == X_z, 1 == x, y == X_z, 1 == c)
analysis:310:DEBUG (_get_stem_from_ss) - mainQ init_symvars: I X_z, I X_k
analysis:313:DEBUG (_get_stem_from_ss) - stem_cond (<class 'z3.z3.BoolRef'>): True
analysis:314:DEBUG (_get_stem_from_ss) - stem_transrel (<class 'z3.z3.BoolRef'>): And(z == X_z, 1 == x, y == X_z, 1 == c)
analysis:351:DEBUG (_get_loop_from_symstates) - Create C source for vloop_18: /var/tmp/Dig_wm1ltndd
analysis:266:DEBUG (_get_symstates_from_src) - SymStatesC.maxdepth: 24
data.symstates:369:WARNING (merge) - vtrace1_18: no symbolic states at depth 24
data.symstates:369:WARNING (merge) - vtrace1_18: no symbolic states at depth 21
data.symstates:369:WARNING (merge) - vtrace1_18: no symbolic states at depth 23
data.symstates:369:WARNING (merge) - vtrace1_18: no symbolic states at depth 22
data.symstates:369:WARNING (merge) - vtrace2_18: no symbolic states at depth 24
data.symstates:369:WARNING (merge) - vtrace2_18: no symbolic states at depth 21
data.symstates:369:WARNING (merge) - vtrace2_18: no symbolic states at depth 22
data.symstates:369:WARNING (merge) - vtrace4_18: no symbolic states at depth 21
data.symstates:369:WARNING (merge) - vtrace4_18: no symbolic states at depth 23
data.symstates:369:WARNING (merge) - vtrace4_18: no symbolic states at depth 22
data.symstates:369:WARNING (merge) - vtrace3_18: no symbolic states at depth 24
data.symstates:369:WARNING (merge) - vtrace3_18: no symbolic states at depth 21
data.symstates:369:WARNING (merge) - vtrace3_18: no symbolic states at depth 23
data.symstates:369:WARNING (merge) - vtrace3_18: no symbolic states at depth 22
analysis:279:DEBUG (_get_symstates_from_src) - target_loc: vtrace2_18
utils.profiling:31:DEBUG (timed) - _get_symstates_from_src: 11638.44ms
analysis:362:DEBUG (_get_loop_from_symstates) - vloop inp_decls: I z, I x, I y, I c
analysis:363:DEBUG (_get_loop_from_symstates) - vloop inv_decls: {'vtrace1_18': (Symb(name='z', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='c', typ='I')), 'vtrace2_18': (Symb(name='z', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='c', typ='I')), 'vtrace3_18': (Symb(name='z', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='c', typ='I')), 'vtrace4_18': (Symb(name='z', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='c', typ='I'))}
analysis:364:DEBUG (_get_loop_from_symstates) - vloop init_symvars: I X_z, I X_x, I X_y, I X_c
analysis:461:DEBUG (_get_loop_from_symstates) - inloop_symstate: loc: vtrace2_18
pc: -1 == X_x*X_z + -1*X_x + -1*X_y
slocal: And(z == X_z, x == X_x, y == X_y, c == X_c)
analysis:462:DEBUG (_get_loop_from_symstates) - transrel_symstate: loc: vtrace4_18
pc: -1 == X_x*X_z + -1*X_x + -1*X_y
slocal: And(z == X_z, x == X_x + X_y, y == X_y*X_z, c == 1 + X_c)
analysis:468:DEBUG (_get_loop_from_symstates) - loop_cond: -1 == x*z + -1*x + -1*y
analysis:475:DEBUG (_get_loop_from_symstates) - loop_transrel: And(And(z0 == z, x0 == x, y0 == y, c0 == c),
    And(z1 == z, x1 == x + y, y1 == y*z, c1 == 1 + c),
    -1 == x*z + -1*x + -1*y)
utils.profiling:31:DEBUG (timed) - _get_loopinfo_from_symstates: 24886.16ms
analysis:537:DEBUG (get_loopinfo) - stem: <utils.loop.Stem object at 0x7fd9e20bc4a8>
analysis:538:DEBUG (get_loopinfo) - loop: <utils.loop.Loop object at 0x7fd9e2e81b38>
utils.profiling:31:DEBUG (timed) - get_loopinfo: 24886.53ms
analysis:864:DEBUG (prove_nonterm_vloop) - use_dfs: False
analysis:865:DEBUG (prove_nonterm_vloop) - use_bfs: True
analysis:843:DEBUG (_stat_candidate_rcs) - stat (1 total): defaultdict(<class 'int'>, {0: 1})
analysis:936:DEBUG (prove_rcs) - PROVE_NT DEPTH 0: ZConj({-1 == x*z + -1*x + -1*y})
analysis:643:DEBUG (verify) - loop_transrel: And(And(z0 == z, x0 == x, y0 == y, c0 == c),
    And(z1 == z, x1 == x + y, y1 == y*z, c1 == 1 + c),
    -1 == x*z + -1*x + -1*y)
analysis:644:DEBUG (verify) - loop_cond: -1 == x*z + -1*x + -1*y
analysis:645:DEBUG (verify) - rcs: ZConj({-1 == x*z + -1*x + -1*y})
analysis:659:DEBUG (verify) - labeled_rcs: ZConj({-1 == x*z + -1*x + -1*y:c_0})
analysis:666:DEBUG (verify) - transrel_rcs: ZConj({-1 == x0*z0 + -1*x0 + -1*y0:c_0, And(And(z0 == z, x0 == x, y0 == y, c0 == c),
    And(z1 == z, x1 == x + y, y1 == y*z, c1 == 1 + c),
    -1 == x*z + -1*x + -1*y)})
analysis:671:DEBUG (verify) - init_transrel_rcs: ZConj({And(z == X_z, 1 == x, y == X_z, 1 == c), And(And(z0 == z, x0 == x, y0 == y, c0 == c),
    And(z1 == z, x1 == x + y, y1 == y*z, c1 == 1 + c),
    -1 == x*z + -1*x + -1*y), -1 == x0*z0 + -1*x0 + -1*y0:c_0, True})
analysis:681:DEBUG (_check) - rc: -1 == x*z + -1*x + -1*y:c_0
analysis:686:DEBUG (_check) - rc_r: -1 == x1*z1 + -1*x1 + -1*y1
analysis:687:DEBUG (_check) - f: ZConj({And(And(z0 == z, x0 == x, y0 == y, c0 == c),
    And(z1 == z, x1 == x + y, y1 == y*z, c1 == 1 + c),
    -1 == x*z + -1*x + -1*y), -1 == x0*z0 + -1*x0 + -1*y0:c_0, Not(-1 == x1*z1 + -1*x1 + -1*y1)})
solver:212:DEBUG (_get_unsat_core) - approx: []
analysis:695:DEBUG (_check) - rs: unsat
analysis:696:DEBUG (_check) - unsat_core: []
analysis:739:INFO (verify) - dg: defaultdict(<class 'list'>, {'c_0': []})
analysis:740:INFO (verify) - label_d: defaultdict(<class 'str'>, {-1 == x*z + -1*x + -1*y: 'c_0'})
analysis:741:INFO (verify) - rev_label_d: {'c_0': -1 == x*z + -1*x + -1*y}
analysis:744:INFO (verify) - loop_cond_label: c_0
analysis:748:INFO (verify) - mds_labels: {'c_0'}
analysis:749:INFO (verify) - mds: ZConj({-1 == x*z + -1*x + -1*y})
utils.profiling:31:DEBUG (timed) - verify: 534.23ms
analysis:952:DEBUG (prove_rcs) - new valid rcs: ZConj({-1 == x*z + -1*x + -1*y})
utils.profiling:31:DEBUG (timed) - prove_nonterm_vloop: 25571.42ms
analysis:975:INFO (print_valid_rcs) - rcs: ZConj({-1 == x*z + -1*x + -1*y})
analysis:976:INFO (print_valid_rcs) - (simplified) rcs: -1 == x*z + -1*x + -1*y
utils.profiling:31:DEBUG (timed) - prove: 28207.77ms
TNT result: (False, ('vloop_18', [(ZConj({-1 == x*z + -1*x + -1*y}), [])]))
Time log:
gen_rand_inps: 0.362s
_get_traces_mp: 0.417s
_merge_traces: 1.745s
get_traces_from_inps: 2.162s
_get_symstates_from_src: 24.753s
_get_loopinfo_from_symstates: 24.886s
get_loopinfo: 24.887s
verify: 0.534s
prove_nonterm_vloop: 25.571s
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          validate:46:DEBUG (prove_reach) - res: None
validate:46:DEBUG (prove_reach) - res: None
validate:254:DEBUG (prove_reach) - wrs: []
utils.profiling:31:DEBUG (timed) - prove_reach: 259055.45ms
analysis:1222:DEBUG (validate_ranking_functions) - r: None
utils.profiling:31:DEBUG (timed) - validate_ranking_functions: 259582.69ms
analysis:1288:DEBUG (prove_term_vloop) - Termination result (vloop_31): None ([-1*r + -1*a, -1*r + -2*a, -1*r + -49*a, -1*r + -51*a, -1*r + -57*a, 196*r + x, 215*r + x, 12*r + x, 231*r + x, -1*r + 5*a, -1*r + 9*a, -1*r + 17*a, 2 + 139*r + x, 37*r + x, -1*r + 22*a])
utils.profiling:31:DEBUG (timed) - prove_term_vloop: 301460.17ms
analysis:1410:DEBUG (prove) - Proving Non-Termination: vloop_31
analysis:321:DEBUG (_get_stem_from_symstates) - vloop.preloop_loc: vtrace1_31
analysis:266:DEBUG (_get_symstates_from_src) - SymStatesC.maxdepth: 24
data.symstates:369:WARNING (merge) - vtrace1_31: no symbolic states at depth 23
data.symstates:369:WARNING (merge) - vtrace1_31: no symbolic states at depth 21
data.symstates:369:WARNING (merge) - vtrace1_31: no symbolic states at depth 22
data.symstates:369:WARNING (merge) - vtrace1_31: no symbolic states at depth 24
data.symstates:369:WARNING (merge) - vtrace2_31: no symbolic states at depth 23
data.symstates:369:WARNING (merge) - vtrace2_31: no symbolic states at depth 22
data.symstates:369:WARNING (merge) - vtrace2_31: no symbolic states at depth 24
data.symstates:369:WARNING (merge) - vtrace4_31: no symbolic states at depth 23
data.symstates:369:WARNING (merge) - vtrace4_31: no symbolic states at depth 21
data.symstates:369:WARNING (merge) - vtrace4_31: no symbolic states at depth 24
data.symstates:369:WARNING (merge) - vtrace3_31: no symbolic states at depth 23
data.symstates:369:WARNING (merge) - vtrace3_31: no symbolic states at depth 21
data.symstates:369:WARNING (merge) - vtrace3_31: no symbolic states at depth 22
data.symstates:369:WARNING (merge) - vtrace3_31: no symbolic states at depth 24
analysis:279:DEBUG (_get_symstates_from_src) - target_loc: vtrace1_31
utils.profiling:31:DEBUG (timed) - _get_symstates_from_src: 25472.03ms
analysis:307:DEBUG (_get_stem_from_ss) - preloop_fst_symstate: loc: vtrace1_31
pc: True
slocal: And(0 == r, x == X_a/2, a == X_a)
analysis:310:DEBUG (_get_stem_from_ss) - mainQ init_symvars: I X_a
analysis:313:DEBUG (_get_stem_from_ss) - stem_cond (<class 'z3.z3.BoolRef'>): True
analysis:314:DEBUG (_get_stem_from_ss) - stem_transrel (<class 'z3.z3.BoolRef'>): And(0 == r, x == X_a/2, a == X_a)
analysis:351:DEBUG (_get_loop_from_symstates) - Create C source for vloop_31: /var/tmp/Dig_6essw49s
analysis:266:DEBUG (_get_symstates_from_src) - SymStatesC.maxdepth: 24

HARD TIMER: 34.506361

