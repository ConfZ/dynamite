__main__:113:INFO (<module>) - Dynamite's logger_level: DEBUG
__main__:114:INFO (<module>) - Dig's logger_level: WARNING
__main__:115:INFO (<module>) - Timeout: 300s
__main__:117:INFO (<module>) - 2020-08-05 20:52:39.564197: dynamo.py --timeout=300 /tools/dynamite/benchmarks/nla-term/cohencu1-both-t.c -t
/tools/SageMath/local/lib/python3.7/site-packages/pyximport/pyximport.py:51: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
analysis:150:DEBUG (__init__) - Create C source for mainQ: /var/tmp/Dig_rnpmfycy
analysis:158:DEBUG (__init__) - trans_cmd: /tools/dynamite/deps/dynamite-instr/src/cil/bin/cilly --save-temps -D HAPPY_MOOD --dotransform /tools/dynamite/benchmarks/nla-term/cohencu1-both-t.c --out=/var/tmp/Dig_rnpmfycy/cohencu1-both-t.c --bnd=500
analysis:165:DEBUG (__init__) - cg: defaultdict(<class 'list'>, {'vloop_29': ['exit'], 'mainQ': ['vloop_29'], 'main': ['mainQ']})
analysis:176:DEBUG (__init__) - postorder_vloop_ids: ['vloop_29']
analysis:185:DEBUG (__init__) - inp_decls (<class 'data.prog.Symbs'>): I a, I k
analysis:186:DEBUG (__init__) - inv_decls (<class 'data.prog.DSymbs'>): {'vtrace1_29': (Symb(name='n', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='z', typ='I'), Symb(name='k', typ='I')), 'vtrace2_29': (Symb(name='n', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='z', typ='I'), Symb(name='k', typ='I')), 'vtrace3_29': (Symb(name='n', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='z', typ='I'), Symb(name='k', typ='I'))}
__main__:163:DEBUG (<module>) - prove_process: 32554
lib:49:DEBUG (gen_rand_inps) - gen 107/100 random inps
utils.profiling:31:DEBUG (timed) - gen_rand_inps: 120.32ms
lib:60:DEBUG (get_traces_from_inps) - inp_decls: I a, I k
lib:61:DEBUG (get_traces_from_inps) - inv_decls: {'vtrace1_29': (Symb(name='n', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='z', typ='I'), Symb(name='k', typ='I')), 'vtrace2_29': (Symb(name='n', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='z', typ='I'), Symb(name='k', typ='I')), 'vtrace3_29': (Symb(name='n', typ='I'), Symb(name='x', typ='I'), Symb(name='y', typ='I'), Symb(name='z', typ='I'), Symb(name='k', typ='I'))}
utils.profiling:31:DEBUG (timed) - _get_traces_mp: 146.98ms
utils.profiling:31:DEBUG (timed) - _merge_traces: 115.00ms
utils.profiling:31:DEBUG (timed) - get_traces_from_inps: 262.59ms
analysis:1025:DEBUG (prove) - itraces: 107
analysis:1029:DEBUG (prove) - Analysing Termination vloop_29
analysis:997:DEBUG (prove_term_vloop) - classify_inps: vloop_29
analysis:1000:DEBUG (prove_term_vloop) - itraces: 107
lib:214:DEBUG (print_inps) - a=7,k=-3: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=277,k=-5: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=14,k=-278: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=274,k=-294: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-2,k=-293: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-288,k=7: [('vtrace1_29', 1), ('vtrace2_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-8,k=13: [('vtrace1_29', 1), ('vtrace2_29', 2), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-288,k=-7: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=12,k=-18: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-28,k=-7: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=270,k=272: [('vtrace1_29', 1), ('vtrace2_29', 45), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=9,k=-271: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-2,k=-8: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-14,k=271: [('vtrace1_29', 1), ('vtrace2_29', 45), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-12,k=274: [('vtrace1_29', 1), ('vtrace2_29', 45), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-12,k=28: [('vtrace1_29', 1), ('vtrace2_29', 4), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-8,k=-30: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=289,k=-286: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=273,k=3: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-14,k=277: [('vtrace1_29', 1), ('vtrace2_29', 46), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=8,k=-28: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=280,k=8: [('vtrace1_29', 1), ('vtrace2_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-5,k=-7: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=8,k=-297: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=11,k=-10: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-7,k=-11: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=5,k=0: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-282,k=283: [('vtrace1_29', 1), ('vtrace2_29', 47), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=29,k=-272: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-300,k=-277: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=4,k=-9: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=19,k=28: [('vtrace1_29', 1), ('vtrace2_29', 4), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-289,k=285: [('vtrace1_29', 1), ('vtrace2_29', 47), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-5,k=292: [('vtrace1_29', 1), ('vtrace2_29', 48), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-291,k=1: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-8,k=274: [('vtrace1_29', 1), ('vtrace2_29', 45), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-15,k=-18: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=12,k=-7: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=7,k=14: [('vtrace1_29', 1), ('vtrace2_29', 2), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=3,k=287: [('vtrace1_29', 1), ('vtrace2_29', 47), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-291,k=-290: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=3,k=-8: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=299,k=1: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-11,k=-2: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=280,k=291: [('vtrace1_29', 1), ('vtrace2_29', 48), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=1,k=279: [('vtrace1_29', 1), ('vtrace2_29', 46), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-23,k=-8: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-7,k=4: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=4,k=282: [('vtrace1_29', 1), ('vtrace2_29', 47), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-14,k=12: [('vtrace1_29', 1), ('vtrace2_29', 2), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-11,k=-4: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-291,k=-10: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-2,k=-299: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=290,k=-13: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-5,k=13: [('vtrace1_29', 1), ('vtrace2_29', 2), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-1,k=9: [('vtrace1_29', 1), ('vtrace2_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-8,k=-271: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=26,k=11: [('vtrace1_29', 1), ('vtrace2_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=14,k=-284: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=12,k=4: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-9,k=4: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-293,k=-15: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-12,k=9: [('vtrace1_29', 1), ('vtrace2_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-13,k=29: [('vtrace1_29', 1), ('vtrace2_29', 4), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-24,k=299: [('vtrace1_29', 1), ('vtrace2_29', 49), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=13,k=6: [('vtrace1_29', 1), ('vtrace2_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-2,k=9: [('vtrace1_29', 1), ('vtrace2_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-28,k=1: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=0,k=283: [('vtrace1_29', 1), ('vtrace2_29', 47), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-291,k=16: [('vtrace1_29', 1), ('vtrace2_29', 2), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-281,k=291: [('vtrace1_29', 1), ('vtrace2_29', 48), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=12,k=-4: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=13,k=12: [('vtrace1_29', 1), ('vtrace2_29', 2), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=0,k=-13: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=291,k=6: [('vtrace1_29', 1), ('vtrace2_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=4,k=-7: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-5,k=4: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-7,k=-293: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-28,k=-299: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-8,k=-9: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-276,k=-27: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=278,k=-286: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=275,k=290: [('vtrace1_29', 1), ('vtrace2_29', 48), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-8,k=-2: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=9,k=-5: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=2,k=11: [('vtrace1_29', 1), ('vtrace2_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=271,k=-3: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=22,k=-273: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-287,k=12: [('vtrace1_29', 1), ('vtrace2_29', 2), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=16,k=-21: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=276,k=-10: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=16,k=295: [('vtrace1_29', 1), ('vtrace2_29', 49), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=18,k=2: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-285,k=-14: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=2,k=27: [('vtrace1_29', 1), ('vtrace2_29', 4), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=283,k=11: [('vtrace1_29', 1), ('vtrace2_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=270,k=4: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=5,k=4: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-282,k=-282: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-298,k=-8: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=280,k=-22: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=0,k=3: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=0,k=290: [('vtrace1_29', 1), ('vtrace2_29', 48), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-282,k=24: [('vtrace1_29', 1), ('vtrace2_29', 4), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=277,k=-9: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-6,k=-297: [('vtrace1_29', 1), ('vtrace3_29', 1)]
lib:214:DEBUG (print_inps) - a=-283,k=8: [('vtrace1_29', 1), ('vtrace2_29', 1), ('vtrace3_29', 1)]
analysis:1002:DEBUG (prove_term_vloop) - base_term_inps: 66
analysis:1003:DEBUG (prove_term_vloop) - term_inps: 41
analysis:1004:DEBUG (prove_term_vloop) - mayloop_inps: 0
analysis:857:DEBUG (infer_ranking_functions) - vloop: vloop_29
analysis:858:DEBUG (infer_ranking_functions) - term_itraces: 41
analysis:905:DEBUG (infer_ranking_functions) - train_rand_trans: 442
analysis:912:DEBUG (_infer_ranking_functions_from_trans) - rnk_template (<class 'sage.symbolic.expression.Expression'>): n*uk_1 + k*uk_5 + uk_2*x + uk_3*y + uk_4*z + uk_0
analysis:913:DEBUG (_infer_ranking_functions_from_trans) - uks: [uk_0, uk_1, uk_2, uk_3, uk_4, uk_5]
analysis:937:DEBUG (_infer_ranking_functions_from_trans) - train_term_rand_trans: 442
analysis:943:DEBUG (_infer_ranking_functions_from_trans) - t1: uk_0 + uk_3 + 6*uk_4 + 8*uk_5
analysis:944:DEBUG (_infer_ranking_functions_from_trans) - t2: uk_0 + uk_1 + uk_2 + 7*uk_3 + 12*uk_4 + 8*uk_5
analysis:946:DEBUG (_infer_ranking_functions_from_trans) - model: [uk_1 = 0,
 uk_4 = 0,
 uk_5 = 0,
 uk_3 = 0,
 uk_2 = -1,
 uk_0 = 0]
analysis:950:DEBUG (_infer_ranking_functions_from_trans) - rf: -1*x
analysis:956:DEBUG (_infer_ranking_functions_from_trans) - train_term_rand_trans: 390
analysis:943:DEBUG (_infer_ranking_functions_from_trans) - t1: uk_0 + 2*uk_1 + 8*uk_2 + 19*uk_3 + 18*uk_4 + 24*uk_5
analysis:944:DEBUG (_infer_ranking_functions_from_trans) - t2: uk_0 + 4*uk_1 + 64*uk_2 + 61*uk_3 + 30*uk_4 + 24*uk_5
analysis:946:DEBUG (_infer_ranking_functions_from_trans) - model: [uk_1 = 0,
 uk_4 = -1,
 uk_5 = 1,
 uk_3 = 0,
 uk_2 = 0,
 uk_0 = 0]
analysis:950:DEBUG (_infer_ranking_functions_from_trans) - rf: k + -1*z
analysis:956:DEBUG (_infer_ranking_functions_from_trans) - train_term_rand_trans: 0
analysis:957:DEBUG (_infer_ranking_functions_from_trans) - ranking_function_list: [-1*x, k + -1*z]
utils.profiling:31:DEBUG (timed) - infer_ranking_functions: 4679.14ms
analysis:1013:DEBUG (prove_term_vloop) - validate_ranking_functions: vloop_29
analysis:964:DEBUG (validate_ranking_functions) - ranks_str: -1*x|k + -1*z
validate:124:DEBUG (gen_validate_file) - validate_cmd: /tools/dynamite/deps/dynamite-instr/src/cil/bin/cilly --save-temps -D HAPPY_MOOD --dovalidate /tools/dynamite/benchmarks/nla-term/cohencu1-both-t.c --out=/var/tmp/Dig_rnpmfycy/vloop_29/par/validate/cohencu1-both-t.c --pos=29 --ranks="-1*x|k + -1*z"
validate:41:DEBUG (prove_reach) - pcmd: /tools/CPAchecker-1.9-unix/scripts/cpa.sh -spec /tools/reachability.prp -predicateAnalysis -setprop counterexample.export.compressWitness=false /var/tmp/Dig_rnpmfycy/vloop_29/par/validate/cohencu1-both-t.c
validate:41:DEBUG (prove_reach) - pcmd: /tools/ultimate/releaseScripts/default/UAutomizer-linux/Ultimate.py --spec /tools/reachability.prp --architecture 32bit --witness-dir /var/tmp/Dig_rnpmfycy/vloop_29/par/uatm --witness-name witness.graphml --file /var/tmp/Dig_rnpmfycy/vloop_29/par/validate/cohencu1-both-t.c
validate:41:DEBUG (prove_reach) - pcmd: /tools/ultimate/releaseScripts/default/UTaipan-linux/Ultimate.py --spec /tools/reachability.prp --architecture 32bit --witness-dir /var/tmp/Dig_rnpmfycy/vloop_29/par/utp --witness-name witness.graphml --file /var/tmp/Dig_rnpmfycy/vloop_29/par/validate/cohencu1-both-t.c
validate:46:DEBUG (prove_reach) - res: True
validate:254:DEBUG (prove_reach) - wrs: [('uatm', (True, None))]
validate:257:DEBUG (prove_reach) - Got result firstly from uatm
utils.profiling:31:DEBUG (timed) - prove_reach: 4377.29ms
analysis:977:DEBUG (validate_ranking_functions) - r: True
utils.profiling:31:DEBUG (timed) - validate_ranking_functions: 4529.37ms
analysis:1015:DEBUG (prove_term_vloop) - Termination result (vloop_29): True ([-1*x, k + -1*z])
utils.profiling:31:DEBUG (timed) - prove_term_vloop: 9214.42ms
utils.profiling:31:DEBUG (timed) - prove: 9598.78ms
utils.profiling:31:DEBUG (timed) - prove: 9598.95ms
Termination result: True
Time log:
gen_rand_inps: 0.120s
_get_traces_mp: 0.147s
_merge_traces: 0.115s
get_traces_from_inps: 0.263s
infer_ranking_functions: 4.679s
prove_reach: 4.377s
validate_ranking_functions: 4.529s
prove_term_vloop: 9.214s
prove: 9.599s
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              validate:46:DEBUG (prove_reach) - res: None
validate:46:DEBUG (prove_reach) - res: None
validate:46:DEBUG (prove_reach) - res: None
validate:254:DEBUG (prove_reach) - wrs: []
utils.profiling:31:DEBUG (timed) - prove_reach: 276565.36ms
analysis:977:DEBUG (validate_ranking_functions) - r: None
utils.profiling:31:DEBUG (timed) - validate_ranking_functions: 276722.55ms
analysis:1015:DEBUG (prove_term_vloop) - Termination result (vloop_30): None ([-1*v, -1*c + k])
utils.profiling:31:DEBUG (timed) - prove_term_vloop: 300739.58ms
utils.profiling:31:DEBUG (timed) - prove: 301119.49ms
utils.profiling:31:DEBUG (timed) - prove: 301119.73ms
Termination result: None
Time log:
gen_rand_inps: 0.236s
_get_traces_mp: 0.000s
_merge_traces: 0.138s
get_traces_from_inps: 0.139s
infer_ranking_functions: 24.008s
prove_reach: 276.565s
validate_ranking_functions: 276.723s
prove_term_vloop: 300.740s
prove: 301.119s

HARD TIMER: 11.858992

